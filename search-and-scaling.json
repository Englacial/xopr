{"version":2,"kind":"Notebook","sha256":"c4f2084f07a664602d9d463bb101599c196313f37db9e52a79ce0d260691b45d","slug":"search-and-scaling","location":"/notebooks/search_and_scaling.ipynb","dependencies":[],"frontmatter":{"title":"Searching by region and scaling up","description":"Demonstration of how to find flight segments by geographic region and scale your workflows","date":"2025-08-07","kernelspec":{"name":"python3","display_name":"xopr","language":"python"},"github":"https://github.com/thomasteisberg/xopr","numbering":{"title":{"offset":1}},"edit_url":"https://github.com/thomasteisberg/xopr/blob/HEAD/docs/notebooks/search_and_scaling.ipynb","exports":[{"format":"ipynb","filename":"search_and_scaling.ipynb","url":"/xopr/build/search_and_scaling-c22f146bb5c12cb5c1c2750907bd4882.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"This notebook demonstrates:","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"iqrYNdpQYt"}],"key":"gqU0ibKllH"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":8,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Loading radar frames intersecting a geographic region (in this case an ice shelf)","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"ASgyCObHou"}],"key":"yEVFnNdyZs"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Simple processing on focused radar data","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"GaYeOasinJ"}],"key":"iYLMJUyxOS"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"How to use ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"swngJmPjz4"},{"type":"link","url":"https://docs.dask.org/en/stable/deploying.html","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Dask clusters","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"jcQj0J7PD2"}],"urlSource":"https://docs.dask.org/en/stable/deploying.html","key":"uxdvlO2Bfi"},{"type":"text","value":" to scale up your analysis, optionally using ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"onpIuf4W7I"},{"type":"link","url":"https://coiled.io/","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Coiled","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"XKANZAbo7o"}],"urlSource":"https://coiled.io/","key":"OK6pDUaIOI"},{"type":"text","value":" to parallelize your analysis in the cloud","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"ItIAY6Dow0"}],"key":"UEJ9pSW5Gw"}],"key":"ziGWznVFNn"}],"key":"qv1wVM6fHi"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%load_ext autoreload\n%autoreload 2\n\nimport numpy as np\nimport xarray as xr\nimport hvplot.xarray\nimport geoviews as gv\nimport geoviews.feature as gf\nimport cartopy.crs as ccrs\nimport matplotlib.pyplot as plt\nimport shapely\nimport scipy.constants\nimport pandas as pd\nimport traceback\n\nimport xopr.opr_access\nimport xopr.geometry\n\nhvplot.extension('bokeh')","key":"aX4UtKgvtZ"},{"type":"output","id":"B7H_nYCOG4Jf3U6ra2QKA","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<script type=\"esms-options\">{\"shimMode\": true}</script><style>*[data-root-id],\n*[data-root-id] > * {\n  box-sizing: border-box;\n  font-family: var(--jp-ui-font-family);\n  font-size: var(--jp-ui-font-size1);\n  color: var(--vscode-editor-foreground, var(--jp-ui-font-color1));\n}\n\n/* Override VSCode background color */\n.cell-output-ipywidget-background:has(\n  > .cell-output-ipywidget-background > .lm-Widget > *[data-root-id]\n),\n.cell-output-ipywidget-background:has(> .lm-Widget > *[data-root-id]) {\n  background-color: transparent !important;\n}\n</style>","content_type":"text/html"}}},{"output_type":"display_data","metadata":{},"data":{"application/javascript":{"content":"(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  const force = true;\n  const py_version = '3.7.3'.replace('rc', '-rc.').replace('.dev', '-dev.');\n  const reloading = false;\n  const Bokeh = root.Bokeh;\n\n  // Set a timeout for this load but only if we are not already initializing\n  if (typeof (root._bokeh_timeout) === \"undefined\" || (force || !root._bokeh_is_initializing)) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks;\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, js_modules, js_exports, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n    if (js_modules == null) js_modules = [];\n    if (js_exports == null) js_exports = {};\n\n    root._bokeh_onload_callbacks.push(callback);\n\n    if (root._bokeh_is_loading > 0) {\n      // Don't load bokeh if it is still initializing\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    } else if (js_urls.length === 0 && js_modules.length === 0 && Object.keys(js_exports).length === 0) {\n      // There is nothing to load\n      run_callbacks();\n      return null;\n    }\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n    window._bokeh_on_load = on_load\n\n    function on_error(e) {\n      const src_el = e.srcElement\n      console.error(\"failed to load \" + (src_el.href || src_el.src));\n    }\n\n    const skip = [];\n    if (window.requirejs) {\n      window.requirejs.config({'packages': {}, 'paths': {}, 'shim': {}});\n      root._bokeh_is_loading = css_urls.length + 0;\n    } else {\n      root._bokeh_is_loading = css_urls.length + js_urls.length + js_modules.length + Object.keys(js_exports).length;\n    }\n\n    const existing_stylesheets = []\n    const links = document.getElementsByTagName('link')\n    for (let i = 0; i < links.length; i++) {\n      const link = links[i]\n      if (link.href != null) {\n        existing_stylesheets.push(link.href)\n      }\n    }\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const escaped = encodeURI(url)\n      if (existing_stylesheets.indexOf(escaped) !== -1) {\n        on_load()\n        continue;\n      }\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }    var existing_scripts = []\n    const scripts = document.getElementsByTagName('script')\n    for (let i = 0; i < scripts.length; i++) {\n      var script = scripts[i]\n      if (script.src != null) {\n        existing_scripts.push(script.src)\n      }\n    }\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) !== -1 || existing_scripts.indexOf(escaped) !== -1) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (let i = 0; i < js_modules.length; i++) {\n      const url = js_modules[i];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) !== -1 || existing_scripts.indexOf(escaped) !== -1) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      var element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (const name in js_exports) {\n      const url = js_exports[name];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) >= 0 || root[name] != null) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      var element = document.createElement('script');\n      element.onerror = on_error;\n      element.async = false;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      element.textContent = `\n      import ${name} from \"${url}\"\n      window.${name} = ${name}\n      window._bokeh_on_load()\n      `\n      document.head.appendChild(element);\n    }\n    if (!js_urls.length && !js_modules.length) {\n      on_load()\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  const js_urls = [\"https://cdn.holoviz.org/panel/1.7.5/dist/bundled/reactiveesm/es-module-shims@^1.10.0/dist/es-module-shims.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-3.7.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-gl-3.7.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-3.7.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-3.7.3.min.js\", \"https://cdn.holoviz.org/panel/1.7.5/dist/panel.min.js\"];\n  const js_modules = [];\n  const js_exports = {};\n  const css_urls = [];\n  const inline_js = [    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\nfunction(Bokeh) {} // ensure no trailing comma for IE\n  ];\n\n  function run_inline_js() {\n    if ((root.Bokeh !== undefined) || (force === true)) {\n      for (let i = 0; i < inline_js.length; i++) {\n        try {\n          inline_js[i].call(root, root.Bokeh);\n        } catch(e) {\n          if (!reloading) {\n            throw e;\n          }\n        }\n      }\n      // Cache old bokeh versions\n      if (Bokeh != undefined && !reloading) {\n        var NewBokeh = root.Bokeh;\n        if (Bokeh.versions === undefined) {\n          Bokeh.versions = new Map();\n        }\n        if (NewBokeh.version !== Bokeh.version) {\n          Bokeh.versions.set(NewBokeh.version, NewBokeh)\n        }\n        root.Bokeh = Bokeh;\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    }\n    root._bokeh_is_initializing = false\n  }\n\n  function load_or_wait() {\n    // Implement a backoff loop that tries to ensure we do not load multiple\n    // versions of Bokeh and its dependencies at the same time.\n    // In recent versions we use the root._bokeh_is_initializing flag\n    // to determine whether there is an ongoing attempt to initialize\n    // bokeh, however for backward compatibility we also try to ensure\n    // that we do not start loading a newer (Panel>=1.0 and Bokeh>3) version\n    // before older versions are fully initialized.\n    if (root._bokeh_is_initializing && Date.now() > root._bokeh_timeout) {\n      // If the timeout and bokeh was not successfully loaded we reset\n      // everything and try loading again\n      root._bokeh_timeout = Date.now() + 5000;\n      root._bokeh_is_initializing = false;\n      root._bokeh_onload_callbacks = undefined;\n      root._bokeh_is_loading = 0\n      console.log(\"Bokeh: BokehJS was loaded multiple times but one version failed to initialize.\");\n      load_or_wait();\n    } else if (root._bokeh_is_initializing || (typeof root._bokeh_is_initializing === \"undefined\" && root._bokeh_onload_callbacks !== undefined)) {\n      setTimeout(load_or_wait, 100);\n    } else {\n      root._bokeh_is_initializing = true\n      root._bokeh_onload_callbacks = []\n      const bokeh_loaded = root.Bokeh != null && (root.Bokeh.version === py_version || (root.Bokeh.versions !== undefined && root.Bokeh.versions.has(py_version)));\n      if (!reloading && !bokeh_loaded) {\n        if (root.Bokeh) {\n          root.Bokeh = undefined;\n        }\n        console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n      }\n      load_libs(css_urls, js_urls, js_modules, js_exports, function() {\n        console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n        run_inline_js();\n      });\n    }\n  }\n  // Give older versions of the autoload script a head-start to ensure\n  // they initialize before we start loading newer version.\n  setTimeout(load_or_wait, 100)\n}(window));","content_type":"application/javascript"},"application/vnd.holoviews_load.v0+json":{"content":"(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  const force = true;\n  const py_version = '3.7.3'.replace('rc', '-rc.').replace('.dev', '-dev.');\n  const reloading = false;\n  const Bokeh = root.Bokeh;\n\n  // Set a timeout for this load but only if we are not already initializing\n  if (typeof (root._bokeh_timeout) === \"undefined\" || (force || !root._bokeh_is_initializing)) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks;\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, js_modules, js_exports, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n    if (js_modules == null) js_modules = [];\n    if (js_exports == null) js_exports = {};\n\n    root._bokeh_onload_callbacks.push(callback);\n\n    if (root._bokeh_is_loading > 0) {\n      // Don't load bokeh if it is still initializing\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    } else if (js_urls.length === 0 && js_modules.length === 0 && Object.keys(js_exports).length === 0) {\n      // There is nothing to load\n      run_callbacks();\n      return null;\n    }\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n    window._bokeh_on_load = on_load\n\n    function on_error(e) {\n      const src_el = e.srcElement\n      console.error(\"failed to load \" + (src_el.href || src_el.src));\n    }\n\n    const skip = [];\n    if (window.requirejs) {\n      window.requirejs.config({'packages': {}, 'paths': {}, 'shim': {}});\n      root._bokeh_is_loading = css_urls.length + 0;\n    } else {\n      root._bokeh_is_loading = css_urls.length + js_urls.length + js_modules.length + Object.keys(js_exports).length;\n    }\n\n    const existing_stylesheets = []\n    const links = document.getElementsByTagName('link')\n    for (let i = 0; i < links.length; i++) {\n      const link = links[i]\n      if (link.href != null) {\n        existing_stylesheets.push(link.href)\n      }\n    }\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const escaped = encodeURI(url)\n      if (existing_stylesheets.indexOf(escaped) !== -1) {\n        on_load()\n        continue;\n      }\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }    var existing_scripts = []\n    const scripts = document.getElementsByTagName('script')\n    for (let i = 0; i < scripts.length; i++) {\n      var script = scripts[i]\n      if (script.src != null) {\n        existing_scripts.push(script.src)\n      }\n    }\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) !== -1 || existing_scripts.indexOf(escaped) !== -1) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (let i = 0; i < js_modules.length; i++) {\n      const url = js_modules[i];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) !== -1 || existing_scripts.indexOf(escaped) !== -1) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      var element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (const name in js_exports) {\n      const url = js_exports[name];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) >= 0 || root[name] != null) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      var element = document.createElement('script');\n      element.onerror = on_error;\n      element.async = false;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      element.textContent = `\n      import ${name} from \"${url}\"\n      window.${name} = ${name}\n      window._bokeh_on_load()\n      `\n      document.head.appendChild(element);\n    }\n    if (!js_urls.length && !js_modules.length) {\n      on_load()\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  const js_urls = [\"https://cdn.holoviz.org/panel/1.7.5/dist/bundled/reactiveesm/es-module-shims@^1.10.0/dist/es-module-shims.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-3.7.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-gl-3.7.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-3.7.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-3.7.3.min.js\", \"https://cdn.holoviz.org/panel/1.7.5/dist/panel.min.js\"];\n  const js_modules = [];\n  const js_exports = {};\n  const css_urls = [];\n  const inline_js = [    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\nfunction(Bokeh) {} // ensure no trailing comma for IE\n  ];\n\n  function run_inline_js() {\n    if ((root.Bokeh !== undefined) || (force === true)) {\n      for (let i = 0; i < inline_js.length; i++) {\n        try {\n          inline_js[i].call(root, root.Bokeh);\n        } catch(e) {\n          if (!reloading) {\n            throw e;\n          }\n        }\n      }\n      // Cache old bokeh versions\n      if (Bokeh != undefined && !reloading) {\n        var NewBokeh = root.Bokeh;\n        if (Bokeh.versions === undefined) {\n          Bokeh.versions = new Map();\n        }\n        if (NewBokeh.version !== Bokeh.version) {\n          Bokeh.versions.set(NewBokeh.version, NewBokeh)\n        }\n        root.Bokeh = Bokeh;\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    }\n    root._bokeh_is_initializing = false\n  }\n\n  function load_or_wait() {\n    // Implement a backoff loop that tries to ensure we do not load multiple\n    // versions of Bokeh and its dependencies at the same time.\n    // In recent versions we use the root._bokeh_is_initializing flag\n    // to determine whether there is an ongoing attempt to initialize\n    // bokeh, however for backward compatibility we also try to ensure\n    // that we do not start loading a newer (Panel>=1.0 and Bokeh>3) version\n    // before older versions are fully initialized.\n    if (root._bokeh_is_initializing && Date.now() > root._bokeh_timeout) {\n      // If the timeout and bokeh was not successfully loaded we reset\n      // everything and try loading again\n      root._bokeh_timeout = Date.now() + 5000;\n      root._bokeh_is_initializing = false;\n      root._bokeh_onload_callbacks = undefined;\n      root._bokeh_is_loading = 0\n      console.log(\"Bokeh: BokehJS was loaded multiple times but one version failed to initialize.\");\n      load_or_wait();\n    } else if (root._bokeh_is_initializing || (typeof root._bokeh_is_initializing === \"undefined\" && root._bokeh_onload_callbacks !== undefined)) {\n      setTimeout(load_or_wait, 100);\n    } else {\n      root._bokeh_is_initializing = true\n      root._bokeh_onload_callbacks = []\n      const bokeh_loaded = root.Bokeh != null && (root.Bokeh.version === py_version || (root.Bokeh.versions !== undefined && root.Bokeh.versions.has(py_version)));\n      if (!reloading && !bokeh_loaded) {\n        if (root.Bokeh) {\n          root.Bokeh = undefined;\n        }\n        console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n      }\n      load_libs(css_urls, js_urls, js_modules, js_exports, function() {\n        console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n        run_inline_js();\n      });\n    }\n  }\n  // Give older versions of the autoload script a head-start to ensure\n  // they initialize before we start loading newer version.\n  setTimeout(load_or_wait, 100)\n}(window));","content_type":"application/vnd.holoviews_load.v0+json"}}},{"output_type":"display_data","metadata":{},"data":{"application/vnd.holoviews_load.v0+json":{"content":"\nif ((window.PyViz === undefined) || (window.PyViz instanceof HTMLElement)) {\n  window.PyViz = {comms: {}, comm_status:{}, kernels:{}, receivers: {}, plot_index: []}\n}\n\n\n    function JupyterCommManager() {\n    }\n\n    JupyterCommManager.prototype.register_target = function(plot_id, comm_id, msg_handler) {\n      if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        comm_manager.register_target(comm_id, function(comm) {\n          comm.on_msg(msg_handler);\n        });\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        window.PyViz.kernels[plot_id].registerCommTarget(comm_id, function(comm) {\n          comm.onMsg = msg_handler;\n        });\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        google.colab.kernel.comms.registerTarget(comm_id, (comm) => {\n          var messages = comm.messages[Symbol.asyncIterator]();\n          function processIteratorResult(result) {\n            var message = result.value;\n            var content = {data: message.data, comm_id};\n            var buffers = []\n            for (var buffer of message.buffers || []) {\n              buffers.push(new DataView(buffer))\n            }\n            var metadata = message.metadata || {};\n            var msg = {content, buffers, metadata}\n            msg_handler(msg);\n            return messages.next().then(processIteratorResult);\n          }\n          return messages.next().then(processIteratorResult);\n        })\n      }\n    }\n\n    JupyterCommManager.prototype.get_client_comm = function(plot_id, comm_id, msg_handler) {\n      if (comm_id in window.PyViz.comms) {\n        return window.PyViz.comms[comm_id];\n      } else if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        var comm = comm_manager.new_comm(comm_id, {}, {}, {}, comm_id);\n        if (msg_handler) {\n          comm.on_msg(msg_handler);\n        }\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        var comm = window.PyViz.kernels[plot_id].connectToComm(comm_id);\n        let retries = 0;\n        const open = () => {\n          if (comm.active) {\n            comm.open();\n          } else if (retries > 3) {\n            console.warn('Comm target never activated')\n          } else {\n            retries += 1\n            setTimeout(open, 500)\n          }\n        }\n        if (comm.active) {\n          comm.open();\n        } else {\n          setTimeout(open, 500)\n        }\n        if (msg_handler) {\n          comm.onMsg = msg_handler;\n        }\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        var comm_promise = google.colab.kernel.comms.open(comm_id)\n        comm_promise.then((comm) => {\n          window.PyViz.comms[comm_id] = comm;\n          if (msg_handler) {\n            var messages = comm.messages[Symbol.asyncIterator]();\n            function processIteratorResult(result) {\n              var message = result.value;\n              var content = {data: message.data};\n              var metadata = message.metadata || {comm_id};\n              var msg = {content, metadata}\n              msg_handler(msg);\n              return messages.next().then(processIteratorResult);\n            }\n            return messages.next().then(processIteratorResult);\n          }\n        })\n        var sendClosure = (data, metadata, buffers, disposeOnDone) => {\n          return comm_promise.then((comm) => {\n            comm.send(data, metadata, buffers, disposeOnDone);\n          });\n        };\n        var comm = {\n          send: sendClosure\n        };\n      }\n      window.PyViz.comms[comm_id] = comm;\n      return comm;\n    }\n    window.PyViz.comm_manager = new JupyterCommManager();\n    \n\n\nvar JS_MIME_TYPE = 'application/javascript';\nvar HTML_MIME_TYPE = 'text/html';\nvar EXEC_MIME_TYPE = 'application/vnd.holoviews_exec.v0+json';\nvar CLASS_NAME = 'output';\n\n/**\n * Render data to the DOM node\n */\nfunction render(props, node) {\n  var div = document.createElement(\"div\");\n  var script = document.createElement(\"script\");\n  node.appendChild(div);\n  node.appendChild(script);\n}\n\n/**\n * Handle when a new output is added\n */\nfunction handle_add_output(event, handle) {\n  var output_area = handle.output_area;\n  var output = handle.output;\n  if ((output.data == undefined) || (!output.data.hasOwnProperty(EXEC_MIME_TYPE))) {\n    return\n  }\n  var id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n  var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n  if (id !== undefined) {\n    var nchildren = toinsert.length;\n    var html_node = toinsert[nchildren-1].children[0];\n    html_node.innerHTML = output.data[HTML_MIME_TYPE];\n    var scripts = [];\n    var nodelist = html_node.querySelectorAll(\"script\");\n    for (var i in nodelist) {\n      if (nodelist.hasOwnProperty(i)) {\n        scripts.push(nodelist[i])\n      }\n    }\n\n    scripts.forEach( function (oldScript) {\n      var newScript = document.createElement(\"script\");\n      var attrs = [];\n      var nodemap = oldScript.attributes;\n      for (var j in nodemap) {\n        if (nodemap.hasOwnProperty(j)) {\n          attrs.push(nodemap[j])\n        }\n      }\n      attrs.forEach(function(attr) { newScript.setAttribute(attr.name, attr.value) });\n      newScript.appendChild(document.createTextNode(oldScript.innerHTML));\n      oldScript.parentNode.replaceChild(newScript, oldScript);\n    });\n    if (JS_MIME_TYPE in output.data) {\n      toinsert[nchildren-1].children[1].textContent = output.data[JS_MIME_TYPE];\n    }\n    output_area._hv_plot_id = id;\n    if ((window.Bokeh !== undefined) && (id in Bokeh.index)) {\n      window.PyViz.plot_index[id] = Bokeh.index[id];\n    } else {\n      window.PyViz.plot_index[id] = null;\n    }\n  } else if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n    var bk_div = document.createElement(\"div\");\n    bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n    var script_attrs = bk_div.children[0].attributes;\n    for (var i = 0; i < script_attrs.length; i++) {\n      toinsert[toinsert.length - 1].childNodes[1].setAttribute(script_attrs[i].name, script_attrs[i].value);\n    }\n    // store reference to server id on output_area\n    output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n  }\n}\n\n/**\n * Handle when an output is cleared or removed\n */\nfunction handle_clear_output(event, handle) {\n  var id = handle.cell.output_area._hv_plot_id;\n  var server_id = handle.cell.output_area._bokeh_server_id;\n  if (((id === undefined) || !(id in PyViz.plot_index)) && (server_id !== undefined)) { return; }\n  var comm = window.PyViz.comm_manager.get_client_comm(\"hv-extension-comm\", \"hv-extension-comm\", function () {});\n  if (server_id !== null) {\n    comm.send({event_type: 'server_delete', 'id': server_id});\n    return;\n  } else if (comm !== null) {\n    comm.send({event_type: 'delete', 'id': id});\n  }\n  delete PyViz.plot_index[id];\n  if ((window.Bokeh !== undefined) & (id in window.Bokeh.index)) {\n    var doc = window.Bokeh.index[id].model.document\n    doc.clear();\n    const i = window.Bokeh.documents.indexOf(doc);\n    if (i > -1) {\n      window.Bokeh.documents.splice(i, 1);\n    }\n  }\n}\n\n/**\n * Handle kernel restart event\n */\nfunction handle_kernel_cleanup(event, handle) {\n  delete PyViz.comms[\"hv-extension-comm\"];\n  window.PyViz.plot_index = {}\n}\n\n/**\n * Handle update_display_data messages\n */\nfunction handle_update_output(event, handle) {\n  handle_clear_output(event, {cell: {output_area: handle.output_area}})\n  handle_add_output(event, handle)\n}\n\nfunction register_renderer(events, OutputArea) {\n  function append_mime(data, metadata, element) {\n    // create a DOM node to render to\n    var toinsert = this.create_output_subarea(\n    metadata,\n    CLASS_NAME,\n    EXEC_MIME_TYPE\n    );\n    this.keyboard_manager.register_events(toinsert);\n    // Render to node\n    var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n    render(props, toinsert[0]);\n    element.append(toinsert);\n    return toinsert\n  }\n\n  events.on('output_added.OutputArea', handle_add_output);\n  events.on('output_updated.OutputArea', handle_update_output);\n  events.on('clear_output.CodeCell', handle_clear_output);\n  events.on('delete.Cell', handle_clear_output);\n  events.on('kernel_ready.Kernel', handle_kernel_cleanup);\n\n  OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n    safe: true,\n    index: 0\n  });\n}\n\nif (window.Jupyter !== undefined) {\n  try {\n    var events = require('base/js/events');\n    var OutputArea = require('notebook/js/outputarea').OutputArea;\n    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n      register_renderer(events, OutputArea);\n    }\n  } catch(err) {\n  }\n}\n","content_type":"application/vnd.holoviews_load.v0+json"},"application/javascript":{"content":"\nif ((window.PyViz === undefined) || (window.PyViz instanceof HTMLElement)) {\n  window.PyViz = {comms: {}, comm_status:{}, kernels:{}, receivers: {}, plot_index: []}\n}\n\n\n    function JupyterCommManager() {\n    }\n\n    JupyterCommManager.prototype.register_target = function(plot_id, comm_id, msg_handler) {\n      if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        comm_manager.register_target(comm_id, function(comm) {\n          comm.on_msg(msg_handler);\n        });\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        window.PyViz.kernels[plot_id].registerCommTarget(comm_id, function(comm) {\n          comm.onMsg = msg_handler;\n        });\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        google.colab.kernel.comms.registerTarget(comm_id, (comm) => {\n          var messages = comm.messages[Symbol.asyncIterator]();\n          function processIteratorResult(result) {\n            var message = result.value;\n            var content = {data: message.data, comm_id};\n            var buffers = []\n            for (var buffer of message.buffers || []) {\n              buffers.push(new DataView(buffer))\n            }\n            var metadata = message.metadata || {};\n            var msg = {content, buffers, metadata}\n            msg_handler(msg);\n            return messages.next().then(processIteratorResult);\n          }\n          return messages.next().then(processIteratorResult);\n        })\n      }\n    }\n\n    JupyterCommManager.prototype.get_client_comm = function(plot_id, comm_id, msg_handler) {\n      if (comm_id in window.PyViz.comms) {\n        return window.PyViz.comms[comm_id];\n      } else if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        var comm = comm_manager.new_comm(comm_id, {}, {}, {}, comm_id);\n        if (msg_handler) {\n          comm.on_msg(msg_handler);\n        }\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        var comm = window.PyViz.kernels[plot_id].connectToComm(comm_id);\n        let retries = 0;\n        const open = () => {\n          if (comm.active) {\n            comm.open();\n          } else if (retries > 3) {\n            console.warn('Comm target never activated')\n          } else {\n            retries += 1\n            setTimeout(open, 500)\n          }\n        }\n        if (comm.active) {\n          comm.open();\n        } else {\n          setTimeout(open, 500)\n        }\n        if (msg_handler) {\n          comm.onMsg = msg_handler;\n        }\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        var comm_promise = google.colab.kernel.comms.open(comm_id)\n        comm_promise.then((comm) => {\n          window.PyViz.comms[comm_id] = comm;\n          if (msg_handler) {\n            var messages = comm.messages[Symbol.asyncIterator]();\n            function processIteratorResult(result) {\n              var message = result.value;\n              var content = {data: message.data};\n              var metadata = message.metadata || {comm_id};\n              var msg = {content, metadata}\n              msg_handler(msg);\n              return messages.next().then(processIteratorResult);\n            }\n            return messages.next().then(processIteratorResult);\n          }\n        })\n        var sendClosure = (data, metadata, buffers, disposeOnDone) => {\n          return comm_promise.then((comm) => {\n            comm.send(data, metadata, buffers, disposeOnDone);\n          });\n        };\n        var comm = {\n          send: sendClosure\n        };\n      }\n      window.PyViz.comms[comm_id] = comm;\n      return comm;\n    }\n    window.PyViz.comm_manager = new JupyterCommManager();\n    \n\n\nvar JS_MIME_TYPE = 'application/javascript';\nvar HTML_MIME_TYPE = 'text/html';\nvar EXEC_MIME_TYPE = 'application/vnd.holoviews_exec.v0+json';\nvar CLASS_NAME = 'output';\n\n/**\n * Render data to the DOM node\n */\nfunction render(props, node) {\n  var div = document.createElement(\"div\");\n  var script = document.createElement(\"script\");\n  node.appendChild(div);\n  node.appendChild(script);\n}\n\n/**\n * Handle when a new output is added\n */\nfunction handle_add_output(event, handle) {\n  var output_area = handle.output_area;\n  var output = handle.output;\n  if ((output.data == undefined) || (!output.data.hasOwnProperty(EXEC_MIME_TYPE))) {\n    return\n  }\n  var id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n  var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n  if (id !== undefined) {\n    var nchildren = toinsert.length;\n    var html_node = toinsert[nchildren-1].children[0];\n    html_node.innerHTML = output.data[HTML_MIME_TYPE];\n    var scripts = [];\n    var nodelist = html_node.querySelectorAll(\"script\");\n    for (var i in nodelist) {\n      if (nodelist.hasOwnProperty(i)) {\n        scripts.push(nodelist[i])\n      }\n    }\n\n    scripts.forEach( function (oldScript) {\n      var newScript = document.createElement(\"script\");\n      var attrs = [];\n      var nodemap = oldScript.attributes;\n      for (var j in nodemap) {\n        if (nodemap.hasOwnProperty(j)) {\n          attrs.push(nodemap[j])\n        }\n      }\n      attrs.forEach(function(attr) { newScript.setAttribute(attr.name, attr.value) });\n      newScript.appendChild(document.createTextNode(oldScript.innerHTML));\n      oldScript.parentNode.replaceChild(newScript, oldScript);\n    });\n    if (JS_MIME_TYPE in output.data) {\n      toinsert[nchildren-1].children[1].textContent = output.data[JS_MIME_TYPE];\n    }\n    output_area._hv_plot_id = id;\n    if ((window.Bokeh !== undefined) && (id in Bokeh.index)) {\n      window.PyViz.plot_index[id] = Bokeh.index[id];\n    } else {\n      window.PyViz.plot_index[id] = null;\n    }\n  } else if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n    var bk_div = document.createElement(\"div\");\n    bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n    var script_attrs = bk_div.children[0].attributes;\n    for (var i = 0; i < script_attrs.length; i++) {\n      toinsert[toinsert.length - 1].childNodes[1].setAttribute(script_attrs[i].name, script_attrs[i].value);\n    }\n    // store reference to server id on output_area\n    output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n  }\n}\n\n/**\n * Handle when an output is cleared or removed\n */\nfunction handle_clear_output(event, handle) {\n  var id = handle.cell.output_area._hv_plot_id;\n  var server_id = handle.cell.output_area._bokeh_server_id;\n  if (((id === undefined) || !(id in PyViz.plot_index)) && (server_id !== undefined)) { return; }\n  var comm = window.PyViz.comm_manager.get_client_comm(\"hv-extension-comm\", \"hv-extension-comm\", function () {});\n  if (server_id !== null) {\n    comm.send({event_type: 'server_delete', 'id': server_id});\n    return;\n  } else if (comm !== null) {\n    comm.send({event_type: 'delete', 'id': id});\n  }\n  delete PyViz.plot_index[id];\n  if ((window.Bokeh !== undefined) & (id in window.Bokeh.index)) {\n    var doc = window.Bokeh.index[id].model.document\n    doc.clear();\n    const i = window.Bokeh.documents.indexOf(doc);\n    if (i > -1) {\n      window.Bokeh.documents.splice(i, 1);\n    }\n  }\n}\n\n/**\n * Handle kernel restart event\n */\nfunction handle_kernel_cleanup(event, handle) {\n  delete PyViz.comms[\"hv-extension-comm\"];\n  window.PyViz.plot_index = {}\n}\n\n/**\n * Handle update_display_data messages\n */\nfunction handle_update_output(event, handle) {\n  handle_clear_output(event, {cell: {output_area: handle.output_area}})\n  handle_add_output(event, handle)\n}\n\nfunction register_renderer(events, OutputArea) {\n  function append_mime(data, metadata, element) {\n    // create a DOM node to render to\n    var toinsert = this.create_output_subarea(\n    metadata,\n    CLASS_NAME,\n    EXEC_MIME_TYPE\n    );\n    this.keyboard_manager.register_events(toinsert);\n    // Render to node\n    var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n    render(props, toinsert[0]);\n    element.append(toinsert);\n    return toinsert\n  }\n\n  events.on('output_added.OutputArea', handle_add_output);\n  events.on('output_updated.OutputArea', handle_update_output);\n  events.on('clear_output.CodeCell', handle_clear_output);\n  events.on('delete.Cell', handle_clear_output);\n  events.on('kernel_ready.Kernel', handle_kernel_cleanup);\n\n  OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n    safe: true,\n    index: 0\n  });\n}\n\nif (window.Jupyter !== undefined) {\n  try {\n    var events = require('base/js/events');\n    var OutputArea = require('notebook/js/outputarea').OutputArea;\n    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n      register_renderer(events, OutputArea);\n    }\n  } catch(err) {\n  }\n}\n","content_type":"application/javascript"}}},{"output_type":"display_data","metadata":{"application/vnd.holoviews_exec.v0+json":{"id":"6abf16f0-3b51-49e1-904b-6fdceb499cc4"}},"data":{"text/html":{"content":"<div id='6abf16f0-3b51-49e1-904b-6fdceb499cc4'>\n  <div id=\"fc129291-4281-4f41-8b72-989ff76d974e\" data-root-id=\"6abf16f0-3b51-49e1-904b-6fdceb499cc4\" style=\"display: contents;\"></div>\n</div>\n<script type=\"application/javascript\">(function(root) {\n  var docs_json = {\"d7f1f56f-5c36-4d4b-bece-f54567904a27\":{\"version\":\"3.7.3\",\"title\":\"Bokeh Application\",\"roots\":[{\"type\":\"object\",\"name\":\"panel.models.browser.BrowserInfo\",\"id\":\"6abf16f0-3b51-49e1-904b-6fdceb499cc4\"},{\"type\":\"object\",\"name\":\"panel.models.comm_manager.CommManager\",\"id\":\"92a442ba-0026-46e8-a08e-1aa3b8874d68\",\"attributes\":{\"plot_id\":\"6abf16f0-3b51-49e1-904b-6fdceb499cc4\",\"comm_id\":\"699c56a5c30d44559c601d2440ee09b6\",\"client_comm_id\":\"ddc4c6e858f34022824a3b85d821b142\"}}],\"defs\":[{\"type\":\"model\",\"name\":\"ReactiveHTML1\"},{\"type\":\"model\",\"name\":\"FlexBox1\",\"properties\":[{\"name\":\"align_content\",\"kind\":\"Any\",\"default\":\"flex-start\"},{\"name\":\"align_items\",\"kind\":\"Any\",\"default\":\"flex-start\"},{\"name\":\"flex_direction\",\"kind\":\"Any\",\"default\":\"row\"},{\"name\":\"flex_wrap\",\"kind\":\"Any\",\"default\":\"wrap\"},{\"name\":\"gap\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"justify_content\",\"kind\":\"Any\",\"default\":\"flex-start\"}]},{\"type\":\"model\",\"name\":\"FloatPanel1\",\"properties\":[{\"name\":\"config\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}},{\"name\":\"contained\",\"kind\":\"Any\",\"default\":true},{\"name\":\"position\",\"kind\":\"Any\",\"default\":\"right-top\"},{\"name\":\"offsetx\",\"kind\":\"Any\",\"default\":null},{\"name\":\"offsety\",\"kind\":\"Any\",\"default\":null},{\"name\":\"theme\",\"kind\":\"Any\",\"default\":\"primary\"},{\"name\":\"status\",\"kind\":\"Any\",\"default\":\"normalized\"}]},{\"type\":\"model\",\"name\":\"GridStack1\",\"properties\":[{\"name\":\"ncols\",\"kind\":\"Any\",\"default\":null},{\"name\":\"nrows\",\"kind\":\"Any\",\"default\":null},{\"name\":\"allow_resize\",\"kind\":\"Any\",\"default\":true},{\"name\":\"allow_drag\",\"kind\":\"Any\",\"default\":true},{\"name\":\"state\",\"kind\":\"Any\",\"default\":[]}]},{\"type\":\"model\",\"name\":\"drag1\",\"properties\":[{\"name\":\"slider_width\",\"kind\":\"Any\",\"default\":5},{\"name\":\"slider_color\",\"kind\":\"Any\",\"default\":\"black\"},{\"name\":\"value\",\"kind\":\"Any\",\"default\":50}]},{\"type\":\"model\",\"name\":\"click1\",\"properties\":[{\"name\":\"terminal_output\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"debug_name\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"clears\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"ReactiveESM1\",\"properties\":[{\"name\":\"esm_constants\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}}]},{\"type\":\"model\",\"name\":\"JSComponent1\",\"properties\":[{\"name\":\"esm_constants\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}}]},{\"type\":\"model\",\"name\":\"ReactComponent1\",\"properties\":[{\"name\":\"use_shadow_dom\",\"kind\":\"Any\",\"default\":true},{\"name\":\"esm_constants\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}}]},{\"type\":\"model\",\"name\":\"AnyWidgetComponent1\",\"properties\":[{\"name\":\"use_shadow_dom\",\"kind\":\"Any\",\"default\":true},{\"name\":\"esm_constants\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}}]},{\"type\":\"model\",\"name\":\"FastWrapper1\",\"properties\":[{\"name\":\"object\",\"kind\":\"Any\",\"default\":null},{\"name\":\"style\",\"kind\":\"Any\",\"default\":null}]},{\"type\":\"model\",\"name\":\"NotificationArea1\",\"properties\":[{\"name\":\"js_events\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}},{\"name\":\"max_notifications\",\"kind\":\"Any\",\"default\":5},{\"name\":\"notifications\",\"kind\":\"Any\",\"default\":[]},{\"name\":\"position\",\"kind\":\"Any\",\"default\":\"bottom-right\"},{\"name\":\"_clear\",\"kind\":\"Any\",\"default\":0},{\"name\":\"types\",\"kind\":\"Any\",\"default\":[{\"type\":\"map\",\"entries\":[[\"type\",\"warning\"],[\"background\",\"#ffc107\"],[\"icon\",{\"type\":\"map\",\"entries\":[[\"className\",\"fas fa-exclamation-triangle\"],[\"tagName\",\"i\"],[\"color\",\"white\"]]}]]},{\"type\":\"map\",\"entries\":[[\"type\",\"info\"],[\"background\",\"#007bff\"],[\"icon\",{\"type\":\"map\",\"entries\":[[\"className\",\"fas fa-info-circle\"],[\"tagName\",\"i\"],[\"color\",\"white\"]]}]]}]}]},{\"type\":\"model\",\"name\":\"Notification\",\"properties\":[{\"name\":\"background\",\"kind\":\"Any\",\"default\":null},{\"name\":\"duration\",\"kind\":\"Any\",\"default\":3000},{\"name\":\"icon\",\"kind\":\"Any\",\"default\":null},{\"name\":\"message\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"notification_type\",\"kind\":\"Any\",\"default\":null},{\"name\":\"_rendered\",\"kind\":\"Any\",\"default\":false},{\"name\":\"_destroyed\",\"kind\":\"Any\",\"default\":false}]},{\"type\":\"model\",\"name\":\"TemplateActions1\",\"properties\":[{\"name\":\"open_modal\",\"kind\":\"Any\",\"default\":0},{\"name\":\"close_modal\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"BootstrapTemplateActions1\",\"properties\":[{\"name\":\"open_modal\",\"kind\":\"Any\",\"default\":0},{\"name\":\"close_modal\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"TemplateEditor1\",\"properties\":[{\"name\":\"layout\",\"kind\":\"Any\",\"default\":[]}]},{\"type\":\"model\",\"name\":\"MaterialTemplateActions1\",\"properties\":[{\"name\":\"open_modal\",\"kind\":\"Any\",\"default\":0},{\"name\":\"close_modal\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"request_value1\",\"properties\":[{\"name\":\"fill\",\"kind\":\"Any\",\"default\":\"none\"},{\"name\":\"_synced\",\"kind\":\"Any\",\"default\":null},{\"name\":\"_request_sync\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"holoviews.plotting.bokeh.raster.HoverModel\",\"properties\":[{\"name\":\"xy\",\"kind\":\"Any\",\"default\":null},{\"name\":\"data\",\"kind\":\"Any\",\"default\":null}]}]}};\n  var render_items = [{\"docid\":\"d7f1f56f-5c36-4d4b-bece-f54567904a27\",\"roots\":{\"6abf16f0-3b51-49e1-904b-6fdceb499cc4\":\"fc129291-4281-4f41-8b72-989ff76d974e\"},\"root_ids\":[\"6abf16f0-3b51-49e1-904b-6fdceb499cc4\"]}];\n  var docs = Object.values(docs_json)\n  if (!docs) {\n    return\n  }\n  const py_version = docs[0].version.replace('rc', '-rc.').replace('.dev', '-dev.')\n  async function embed_document(root) {\n    var Bokeh = get_bokeh(root)\n    await Bokeh.embed.embed_items_notebook(docs_json, render_items);\n    for (const render_item of render_items) {\n      for (const root_id of render_item.root_ids) {\n\tconst id_el = document.getElementById(root_id)\n\tif (id_el.children.length && id_el.children[0].hasAttribute('data-root-id')) {\n\t  const root_el = id_el.children[0]\n\t  root_el.id = root_el.id + '-rendered'\n\t  for (const child of root_el.children) {\n            // Ensure JupyterLab does not capture keyboard shortcuts\n            // see: https://jupyterlab.readthedocs.io/en/4.1.x/extension/notebook.html#keyboard-interaction-model\n\t    child.setAttribute('data-lm-suppress-shortcuts', 'true')\n\t  }\n\t}\n      }\n    }\n  }\n  function get_bokeh(root) {\n    if (root.Bokeh === undefined) {\n      return null\n    } else if (root.Bokeh.version !== py_version) {\n      if (root.Bokeh.versions === undefined || !root.Bokeh.versions.has(py_version)) {\n\treturn null\n      }\n      return root.Bokeh.versions.get(py_version);\n    } else if (root.Bokeh.version === py_version) {\n      return root.Bokeh\n    }\n    return null\n  }\n  function is_loaded(root) {\n    var Bokeh = get_bokeh(root)\n    return (Bokeh != null && Bokeh.Panel !== undefined)\n  }\n  if (is_loaded(root)) {\n    embed_document(root);\n  } else {\n    var attempts = 0;\n    var timer = setInterval(function(root) {\n      if (is_loaded(root)) {\n        clearInterval(timer);\n        embed_document(root);\n      } else if (document.readyState == \"complete\") {\n        attempts++;\n        if (attempts > 200) {\n          clearInterval(timer);\n\t  var Bokeh = get_bokeh(root)\n\t  if (Bokeh == null || Bokeh.Panel == null) {\n            console.warn(\"Panel: ERROR: Unable to run Panel code because Bokeh or Panel library is missing\");\n\t  } else {\n\t    console.warn(\"Panel: WARNING: Attempting to render but not all required libraries could be resolved.\")\n\t    embed_document(root)\n\t  }\n        }\n      }\n    }, 25, root)\n  }\n})(window);</script>","content_type":"text/html"},"application/vnd.holoviews_exec.v0+json":{"content":"","content_type":"application/vnd.holoviews_exec.v0+json"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<script type=\"esms-options\">{\"shimMode\": true}</script><style>*[data-root-id],\n*[data-root-id] > * {\n  box-sizing: border-box;\n  font-family: var(--jp-ui-font-family);\n  font-size: var(--jp-ui-font-size1);\n  color: var(--vscode-editor-foreground, var(--jp-ui-font-color1));\n}\n\n/* Override VSCode background color */\n.cell-output-ipywidget-background:has(\n  > .cell-output-ipywidget-background > .lm-Widget > *[data-root-id]\n),\n.cell-output-ipywidget-background:has(> .lm-Widget > *[data-root-id]) {\n  background-color: transparent !important;\n}\n</style>","content_type":"text/html"}}},{"output_type":"display_data","metadata":{},"data":{"application/javascript":{"content":"(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  const force = false;\n  const py_version = '3.7.3'.replace('rc', '-rc.').replace('.dev', '-dev.');\n  const reloading = true;\n  const Bokeh = root.Bokeh;\n\n  // Set a timeout for this load but only if we are not already initializing\n  if (typeof (root._bokeh_timeout) === \"undefined\" || (force || !root._bokeh_is_initializing)) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks;\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, js_modules, js_exports, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n    if (js_modules == null) js_modules = [];\n    if (js_exports == null) js_exports = {};\n\n    root._bokeh_onload_callbacks.push(callback);\n\n    if (root._bokeh_is_loading > 0) {\n      // Don't load bokeh if it is still initializing\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    } else if (js_urls.length === 0 && js_modules.length === 0 && Object.keys(js_exports).length === 0) {\n      // There is nothing to load\n      run_callbacks();\n      return null;\n    }\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n    window._bokeh_on_load = on_load\n\n    function on_error(e) {\n      const src_el = e.srcElement\n      console.error(\"failed to load \" + (src_el.href || src_el.src));\n    }\n\n    const skip = [];\n    if (window.requirejs) {\n      window.requirejs.config({'packages': {}, 'paths': {}, 'shim': {}});\n      root._bokeh_is_loading = css_urls.length + 0;\n    } else {\n      root._bokeh_is_loading = css_urls.length + js_urls.length + js_modules.length + Object.keys(js_exports).length;\n    }\n\n    const existing_stylesheets = []\n    const links = document.getElementsByTagName('link')\n    for (let i = 0; i < links.length; i++) {\n      const link = links[i]\n      if (link.href != null) {\n        existing_stylesheets.push(link.href)\n      }\n    }\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const escaped = encodeURI(url)\n      if (existing_stylesheets.indexOf(escaped) !== -1) {\n        on_load()\n        continue;\n      }\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }    var existing_scripts = []\n    const scripts = document.getElementsByTagName('script')\n    for (let i = 0; i < scripts.length; i++) {\n      var script = scripts[i]\n      if (script.src != null) {\n        existing_scripts.push(script.src)\n      }\n    }\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) !== -1 || existing_scripts.indexOf(escaped) !== -1) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (let i = 0; i < js_modules.length; i++) {\n      const url = js_modules[i];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) !== -1 || existing_scripts.indexOf(escaped) !== -1) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      var element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (const name in js_exports) {\n      const url = js_exports[name];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) >= 0 || root[name] != null) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      var element = document.createElement('script');\n      element.onerror = on_error;\n      element.async = false;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      element.textContent = `\n      import ${name} from \"${url}\"\n      window.${name} = ${name}\n      window._bokeh_on_load()\n      `\n      document.head.appendChild(element);\n    }\n    if (!js_urls.length && !js_modules.length) {\n      on_load()\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  const js_urls = [\"https://cdn.holoviz.org/panel/1.7.5/dist/bundled/reactiveesm/es-module-shims@^1.10.0/dist/es-module-shims.min.js\", \"https://cdn.jsdelivr.net/npm/@holoviz/geoviews@1.14.1/dist/geoviews.min.js\"];\n  const js_modules = [];\n  const js_exports = {};\n  const css_urls = [];\n  const inline_js = [    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\nfunction(Bokeh) {} // ensure no trailing comma for IE\n  ];\n\n  function run_inline_js() {\n    if ((root.Bokeh !== undefined) || (force === true)) {\n      for (let i = 0; i < inline_js.length; i++) {\n        try {\n          inline_js[i].call(root, root.Bokeh);\n        } catch(e) {\n          if (!reloading) {\n            throw e;\n          }\n        }\n      }\n      // Cache old bokeh versions\n      if (Bokeh != undefined && !reloading) {\n        var NewBokeh = root.Bokeh;\n        if (Bokeh.versions === undefined) {\n          Bokeh.versions = new Map();\n        }\n        if (NewBokeh.version !== Bokeh.version) {\n          Bokeh.versions.set(NewBokeh.version, NewBokeh)\n        }\n        root.Bokeh = Bokeh;\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    }\n    root._bokeh_is_initializing = false\n  }\n\n  function load_or_wait() {\n    // Implement a backoff loop that tries to ensure we do not load multiple\n    // versions of Bokeh and its dependencies at the same time.\n    // In recent versions we use the root._bokeh_is_initializing flag\n    // to determine whether there is an ongoing attempt to initialize\n    // bokeh, however for backward compatibility we also try to ensure\n    // that we do not start loading a newer (Panel>=1.0 and Bokeh>3) version\n    // before older versions are fully initialized.\n    if (root._bokeh_is_initializing && Date.now() > root._bokeh_timeout) {\n      // If the timeout and bokeh was not successfully loaded we reset\n      // everything and try loading again\n      root._bokeh_timeout = Date.now() + 5000;\n      root._bokeh_is_initializing = false;\n      root._bokeh_onload_callbacks = undefined;\n      root._bokeh_is_loading = 0\n      console.log(\"Bokeh: BokehJS was loaded multiple times but one version failed to initialize.\");\n      load_or_wait();\n    } else if (root._bokeh_is_initializing || (typeof root._bokeh_is_initializing === \"undefined\" && root._bokeh_onload_callbacks !== undefined)) {\n      setTimeout(load_or_wait, 100);\n    } else {\n      root._bokeh_is_initializing = true\n      root._bokeh_onload_callbacks = []\n      const bokeh_loaded = root.Bokeh != null && (root.Bokeh.version === py_version || (root.Bokeh.versions !== undefined && root.Bokeh.versions.has(py_version)));\n      if (!reloading && !bokeh_loaded) {\n        if (root.Bokeh) {\n          root.Bokeh = undefined;\n        }\n        console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n      }\n      load_libs(css_urls, js_urls, js_modules, js_exports, function() {\n        console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n        run_inline_js();\n      });\n    }\n  }\n  // Give older versions of the autoload script a head-start to ensure\n  // they initialize before we start loading newer version.\n  setTimeout(load_or_wait, 100)\n}(window));","content_type":"application/javascript"},"application/vnd.holoviews_load.v0+json":{"content":"(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  const force = false;\n  const py_version = '3.7.3'.replace('rc', '-rc.').replace('.dev', '-dev.');\n  const reloading = true;\n  const Bokeh = root.Bokeh;\n\n  // Set a timeout for this load but only if we are not already initializing\n  if (typeof (root._bokeh_timeout) === \"undefined\" || (force || !root._bokeh_is_initializing)) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks;\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, js_modules, js_exports, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n    if (js_modules == null) js_modules = [];\n    if (js_exports == null) js_exports = {};\n\n    root._bokeh_onload_callbacks.push(callback);\n\n    if (root._bokeh_is_loading > 0) {\n      // Don't load bokeh if it is still initializing\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    } else if (js_urls.length === 0 && js_modules.length === 0 && Object.keys(js_exports).length === 0) {\n      // There is nothing to load\n      run_callbacks();\n      return null;\n    }\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n    window._bokeh_on_load = on_load\n\n    function on_error(e) {\n      const src_el = e.srcElement\n      console.error(\"failed to load \" + (src_el.href || src_el.src));\n    }\n\n    const skip = [];\n    if (window.requirejs) {\n      window.requirejs.config({'packages': {}, 'paths': {}, 'shim': {}});\n      root._bokeh_is_loading = css_urls.length + 0;\n    } else {\n      root._bokeh_is_loading = css_urls.length + js_urls.length + js_modules.length + Object.keys(js_exports).length;\n    }\n\n    const existing_stylesheets = []\n    const links = document.getElementsByTagName('link')\n    for (let i = 0; i < links.length; i++) {\n      const link = links[i]\n      if (link.href != null) {\n        existing_stylesheets.push(link.href)\n      }\n    }\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const escaped = encodeURI(url)\n      if (existing_stylesheets.indexOf(escaped) !== -1) {\n        on_load()\n        continue;\n      }\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }    var existing_scripts = []\n    const scripts = document.getElementsByTagName('script')\n    for (let i = 0; i < scripts.length; i++) {\n      var script = scripts[i]\n      if (script.src != null) {\n        existing_scripts.push(script.src)\n      }\n    }\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) !== -1 || existing_scripts.indexOf(escaped) !== -1) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (let i = 0; i < js_modules.length; i++) {\n      const url = js_modules[i];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) !== -1 || existing_scripts.indexOf(escaped) !== -1) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      var element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (const name in js_exports) {\n      const url = js_exports[name];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) >= 0 || root[name] != null) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      var element = document.createElement('script');\n      element.onerror = on_error;\n      element.async = false;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      element.textContent = `\n      import ${name} from \"${url}\"\n      window.${name} = ${name}\n      window._bokeh_on_load()\n      `\n      document.head.appendChild(element);\n    }\n    if (!js_urls.length && !js_modules.length) {\n      on_load()\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  const js_urls = [\"https://cdn.holoviz.org/panel/1.7.5/dist/bundled/reactiveesm/es-module-shims@^1.10.0/dist/es-module-shims.min.js\", \"https://cdn.jsdelivr.net/npm/@holoviz/geoviews@1.14.1/dist/geoviews.min.js\"];\n  const js_modules = [];\n  const js_exports = {};\n  const css_urls = [];\n  const inline_js = [    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\nfunction(Bokeh) {} // ensure no trailing comma for IE\n  ];\n\n  function run_inline_js() {\n    if ((root.Bokeh !== undefined) || (force === true)) {\n      for (let i = 0; i < inline_js.length; i++) {\n        try {\n          inline_js[i].call(root, root.Bokeh);\n        } catch(e) {\n          if (!reloading) {\n            throw e;\n          }\n        }\n      }\n      // Cache old bokeh versions\n      if (Bokeh != undefined && !reloading) {\n        var NewBokeh = root.Bokeh;\n        if (Bokeh.versions === undefined) {\n          Bokeh.versions = new Map();\n        }\n        if (NewBokeh.version !== Bokeh.version) {\n          Bokeh.versions.set(NewBokeh.version, NewBokeh)\n        }\n        root.Bokeh = Bokeh;\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    }\n    root._bokeh_is_initializing = false\n  }\n\n  function load_or_wait() {\n    // Implement a backoff loop that tries to ensure we do not load multiple\n    // versions of Bokeh and its dependencies at the same time.\n    // In recent versions we use the root._bokeh_is_initializing flag\n    // to determine whether there is an ongoing attempt to initialize\n    // bokeh, however for backward compatibility we also try to ensure\n    // that we do not start loading a newer (Panel>=1.0 and Bokeh>3) version\n    // before older versions are fully initialized.\n    if (root._bokeh_is_initializing && Date.now() > root._bokeh_timeout) {\n      // If the timeout and bokeh was not successfully loaded we reset\n      // everything and try loading again\n      root._bokeh_timeout = Date.now() + 5000;\n      root._bokeh_is_initializing = false;\n      root._bokeh_onload_callbacks = undefined;\n      root._bokeh_is_loading = 0\n      console.log(\"Bokeh: BokehJS was loaded multiple times but one version failed to initialize.\");\n      load_or_wait();\n    } else if (root._bokeh_is_initializing || (typeof root._bokeh_is_initializing === \"undefined\" && root._bokeh_onload_callbacks !== undefined)) {\n      setTimeout(load_or_wait, 100);\n    } else {\n      root._bokeh_is_initializing = true\n      root._bokeh_onload_callbacks = []\n      const bokeh_loaded = root.Bokeh != null && (root.Bokeh.version === py_version || (root.Bokeh.versions !== undefined && root.Bokeh.versions.has(py_version)));\n      if (!reloading && !bokeh_loaded) {\n        if (root.Bokeh) {\n          root.Bokeh = undefined;\n        }\n        console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n      }\n      load_libs(css_urls, js_urls, js_modules, js_exports, function() {\n        console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n        run_inline_js();\n      });\n    }\n  }\n  // Give older versions of the autoload script a head-start to ensure\n  // they initialize before we start loading newer version.\n  setTimeout(load_or_wait, 100)\n}(window));","content_type":"application/vnd.holoviews_load.v0+json"}}},{"output_type":"display_data","metadata":{},"data":{"application/vnd.holoviews_load.v0+json":{"content":"\nif ((window.PyViz === undefined) || (window.PyViz instanceof HTMLElement)) {\n  window.PyViz = {comms: {}, comm_status:{}, kernels:{}, receivers: {}, plot_index: []}\n}\n\n\n    function JupyterCommManager() {\n    }\n\n    JupyterCommManager.prototype.register_target = function(plot_id, comm_id, msg_handler) {\n      if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        comm_manager.register_target(comm_id, function(comm) {\n          comm.on_msg(msg_handler);\n        });\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        window.PyViz.kernels[plot_id].registerCommTarget(comm_id, function(comm) {\n          comm.onMsg = msg_handler;\n        });\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        google.colab.kernel.comms.registerTarget(comm_id, (comm) => {\n          var messages = comm.messages[Symbol.asyncIterator]();\n          function processIteratorResult(result) {\n            var message = result.value;\n            var content = {data: message.data, comm_id};\n            var buffers = []\n            for (var buffer of message.buffers || []) {\n              buffers.push(new DataView(buffer))\n            }\n            var metadata = message.metadata || {};\n            var msg = {content, buffers, metadata}\n            msg_handler(msg);\n            return messages.next().then(processIteratorResult);\n          }\n          return messages.next().then(processIteratorResult);\n        })\n      }\n    }\n\n    JupyterCommManager.prototype.get_client_comm = function(plot_id, comm_id, msg_handler) {\n      if (comm_id in window.PyViz.comms) {\n        return window.PyViz.comms[comm_id];\n      } else if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        var comm = comm_manager.new_comm(comm_id, {}, {}, {}, comm_id);\n        if (msg_handler) {\n          comm.on_msg(msg_handler);\n        }\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        var comm = window.PyViz.kernels[plot_id].connectToComm(comm_id);\n        let retries = 0;\n        const open = () => {\n          if (comm.active) {\n            comm.open();\n          } else if (retries > 3) {\n            console.warn('Comm target never activated')\n          } else {\n            retries += 1\n            setTimeout(open, 500)\n          }\n        }\n        if (comm.active) {\n          comm.open();\n        } else {\n          setTimeout(open, 500)\n        }\n        if (msg_handler) {\n          comm.onMsg = msg_handler;\n        }\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        var comm_promise = google.colab.kernel.comms.open(comm_id)\n        comm_promise.then((comm) => {\n          window.PyViz.comms[comm_id] = comm;\n          if (msg_handler) {\n            var messages = comm.messages[Symbol.asyncIterator]();\n            function processIteratorResult(result) {\n              var message = result.value;\n              var content = {data: message.data};\n              var metadata = message.metadata || {comm_id};\n              var msg = {content, metadata}\n              msg_handler(msg);\n              return messages.next().then(processIteratorResult);\n            }\n            return messages.next().then(processIteratorResult);\n          }\n        })\n        var sendClosure = (data, metadata, buffers, disposeOnDone) => {\n          return comm_promise.then((comm) => {\n            comm.send(data, metadata, buffers, disposeOnDone);\n          });\n        };\n        var comm = {\n          send: sendClosure\n        };\n      }\n      window.PyViz.comms[comm_id] = comm;\n      return comm;\n    }\n    window.PyViz.comm_manager = new JupyterCommManager();\n    \n\n\nvar JS_MIME_TYPE = 'application/javascript';\nvar HTML_MIME_TYPE = 'text/html';\nvar EXEC_MIME_TYPE = 'application/vnd.holoviews_exec.v0+json';\nvar CLASS_NAME = 'output';\n\n/**\n * Render data to the DOM node\n */\nfunction render(props, node) {\n  var div = document.createElement(\"div\");\n  var script = document.createElement(\"script\");\n  node.appendChild(div);\n  node.appendChild(script);\n}\n\n/**\n * Handle when a new output is added\n */\nfunction handle_add_output(event, handle) {\n  var output_area = handle.output_area;\n  var output = handle.output;\n  if ((output.data == undefined) || (!output.data.hasOwnProperty(EXEC_MIME_TYPE))) {\n    return\n  }\n  var id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n  var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n  if (id !== undefined) {\n    var nchildren = toinsert.length;\n    var html_node = toinsert[nchildren-1].children[0];\n    html_node.innerHTML = output.data[HTML_MIME_TYPE];\n    var scripts = [];\n    var nodelist = html_node.querySelectorAll(\"script\");\n    for (var i in nodelist) {\n      if (nodelist.hasOwnProperty(i)) {\n        scripts.push(nodelist[i])\n      }\n    }\n\n    scripts.forEach( function (oldScript) {\n      var newScript = document.createElement(\"script\");\n      var attrs = [];\n      var nodemap = oldScript.attributes;\n      for (var j in nodemap) {\n        if (nodemap.hasOwnProperty(j)) {\n          attrs.push(nodemap[j])\n        }\n      }\n      attrs.forEach(function(attr) { newScript.setAttribute(attr.name, attr.value) });\n      newScript.appendChild(document.createTextNode(oldScript.innerHTML));\n      oldScript.parentNode.replaceChild(newScript, oldScript);\n    });\n    if (JS_MIME_TYPE in output.data) {\n      toinsert[nchildren-1].children[1].textContent = output.data[JS_MIME_TYPE];\n    }\n    output_area._hv_plot_id = id;\n    if ((window.Bokeh !== undefined) && (id in Bokeh.index)) {\n      window.PyViz.plot_index[id] = Bokeh.index[id];\n    } else {\n      window.PyViz.plot_index[id] = null;\n    }\n  } else if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n    var bk_div = document.createElement(\"div\");\n    bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n    var script_attrs = bk_div.children[0].attributes;\n    for (var i = 0; i < script_attrs.length; i++) {\n      toinsert[toinsert.length - 1].childNodes[1].setAttribute(script_attrs[i].name, script_attrs[i].value);\n    }\n    // store reference to server id on output_area\n    output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n  }\n}\n\n/**\n * Handle when an output is cleared or removed\n */\nfunction handle_clear_output(event, handle) {\n  var id = handle.cell.output_area._hv_plot_id;\n  var server_id = handle.cell.output_area._bokeh_server_id;\n  if (((id === undefined) || !(id in PyViz.plot_index)) && (server_id !== undefined)) { return; }\n  var comm = window.PyViz.comm_manager.get_client_comm(\"hv-extension-comm\", \"hv-extension-comm\", function () {});\n  if (server_id !== null) {\n    comm.send({event_type: 'server_delete', 'id': server_id});\n    return;\n  } else if (comm !== null) {\n    comm.send({event_type: 'delete', 'id': id});\n  }\n  delete PyViz.plot_index[id];\n  if ((window.Bokeh !== undefined) & (id in window.Bokeh.index)) {\n    var doc = window.Bokeh.index[id].model.document\n    doc.clear();\n    const i = window.Bokeh.documents.indexOf(doc);\n    if (i > -1) {\n      window.Bokeh.documents.splice(i, 1);\n    }\n  }\n}\n\n/**\n * Handle kernel restart event\n */\nfunction handle_kernel_cleanup(event, handle) {\n  delete PyViz.comms[\"hv-extension-comm\"];\n  window.PyViz.plot_index = {}\n}\n\n/**\n * Handle update_display_data messages\n */\nfunction handle_update_output(event, handle) {\n  handle_clear_output(event, {cell: {output_area: handle.output_area}})\n  handle_add_output(event, handle)\n}\n\nfunction register_renderer(events, OutputArea) {\n  function append_mime(data, metadata, element) {\n    // create a DOM node to render to\n    var toinsert = this.create_output_subarea(\n    metadata,\n    CLASS_NAME,\n    EXEC_MIME_TYPE\n    );\n    this.keyboard_manager.register_events(toinsert);\n    // Render to node\n    var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n    render(props, toinsert[0]);\n    element.append(toinsert);\n    return toinsert\n  }\n\n  events.on('output_added.OutputArea', handle_add_output);\n  events.on('output_updated.OutputArea', handle_update_output);\n  events.on('clear_output.CodeCell', handle_clear_output);\n  events.on('delete.Cell', handle_clear_output);\n  events.on('kernel_ready.Kernel', handle_kernel_cleanup);\n\n  OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n    safe: true,\n    index: 0\n  });\n}\n\nif (window.Jupyter !== undefined) {\n  try {\n    var events = require('base/js/events');\n    var OutputArea = require('notebook/js/outputarea').OutputArea;\n    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n      register_renderer(events, OutputArea);\n    }\n  } catch(err) {\n  }\n}\n","content_type":"application/vnd.holoviews_load.v0+json"},"application/javascript":{"content":"\nif ((window.PyViz === undefined) || (window.PyViz instanceof HTMLElement)) {\n  window.PyViz = {comms: {}, comm_status:{}, kernels:{}, receivers: {}, plot_index: []}\n}\n\n\n    function JupyterCommManager() {\n    }\n\n    JupyterCommManager.prototype.register_target = function(plot_id, comm_id, msg_handler) {\n      if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        comm_manager.register_target(comm_id, function(comm) {\n          comm.on_msg(msg_handler);\n        });\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        window.PyViz.kernels[plot_id].registerCommTarget(comm_id, function(comm) {\n          comm.onMsg = msg_handler;\n        });\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        google.colab.kernel.comms.registerTarget(comm_id, (comm) => {\n          var messages = comm.messages[Symbol.asyncIterator]();\n          function processIteratorResult(result) {\n            var message = result.value;\n            var content = {data: message.data, comm_id};\n            var buffers = []\n            for (var buffer of message.buffers || []) {\n              buffers.push(new DataView(buffer))\n            }\n            var metadata = message.metadata || {};\n            var msg = {content, buffers, metadata}\n            msg_handler(msg);\n            return messages.next().then(processIteratorResult);\n          }\n          return messages.next().then(processIteratorResult);\n        })\n      }\n    }\n\n    JupyterCommManager.prototype.get_client_comm = function(plot_id, comm_id, msg_handler) {\n      if (comm_id in window.PyViz.comms) {\n        return window.PyViz.comms[comm_id];\n      } else if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        var comm = comm_manager.new_comm(comm_id, {}, {}, {}, comm_id);\n        if (msg_handler) {\n          comm.on_msg(msg_handler);\n        }\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        var comm = window.PyViz.kernels[plot_id].connectToComm(comm_id);\n        let retries = 0;\n        const open = () => {\n          if (comm.active) {\n            comm.open();\n          } else if (retries > 3) {\n            console.warn('Comm target never activated')\n          } else {\n            retries += 1\n            setTimeout(open, 500)\n          }\n        }\n        if (comm.active) {\n          comm.open();\n        } else {\n          setTimeout(open, 500)\n        }\n        if (msg_handler) {\n          comm.onMsg = msg_handler;\n        }\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        var comm_promise = google.colab.kernel.comms.open(comm_id)\n        comm_promise.then((comm) => {\n          window.PyViz.comms[comm_id] = comm;\n          if (msg_handler) {\n            var messages = comm.messages[Symbol.asyncIterator]();\n            function processIteratorResult(result) {\n              var message = result.value;\n              var content = {data: message.data};\n              var metadata = message.metadata || {comm_id};\n              var msg = {content, metadata}\n              msg_handler(msg);\n              return messages.next().then(processIteratorResult);\n            }\n            return messages.next().then(processIteratorResult);\n          }\n        })\n        var sendClosure = (data, metadata, buffers, disposeOnDone) => {\n          return comm_promise.then((comm) => {\n            comm.send(data, metadata, buffers, disposeOnDone);\n          });\n        };\n        var comm = {\n          send: sendClosure\n        };\n      }\n      window.PyViz.comms[comm_id] = comm;\n      return comm;\n    }\n    window.PyViz.comm_manager = new JupyterCommManager();\n    \n\n\nvar JS_MIME_TYPE = 'application/javascript';\nvar HTML_MIME_TYPE = 'text/html';\nvar EXEC_MIME_TYPE = 'application/vnd.holoviews_exec.v0+json';\nvar CLASS_NAME = 'output';\n\n/**\n * Render data to the DOM node\n */\nfunction render(props, node) {\n  var div = document.createElement(\"div\");\n  var script = document.createElement(\"script\");\n  node.appendChild(div);\n  node.appendChild(script);\n}\n\n/**\n * Handle when a new output is added\n */\nfunction handle_add_output(event, handle) {\n  var output_area = handle.output_area;\n  var output = handle.output;\n  if ((output.data == undefined) || (!output.data.hasOwnProperty(EXEC_MIME_TYPE))) {\n    return\n  }\n  var id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n  var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n  if (id !== undefined) {\n    var nchildren = toinsert.length;\n    var html_node = toinsert[nchildren-1].children[0];\n    html_node.innerHTML = output.data[HTML_MIME_TYPE];\n    var scripts = [];\n    var nodelist = html_node.querySelectorAll(\"script\");\n    for (var i in nodelist) {\n      if (nodelist.hasOwnProperty(i)) {\n        scripts.push(nodelist[i])\n      }\n    }\n\n    scripts.forEach( function (oldScript) {\n      var newScript = document.createElement(\"script\");\n      var attrs = [];\n      var nodemap = oldScript.attributes;\n      for (var j in nodemap) {\n        if (nodemap.hasOwnProperty(j)) {\n          attrs.push(nodemap[j])\n        }\n      }\n      attrs.forEach(function(attr) { newScript.setAttribute(attr.name, attr.value) });\n      newScript.appendChild(document.createTextNode(oldScript.innerHTML));\n      oldScript.parentNode.replaceChild(newScript, oldScript);\n    });\n    if (JS_MIME_TYPE in output.data) {\n      toinsert[nchildren-1].children[1].textContent = output.data[JS_MIME_TYPE];\n    }\n    output_area._hv_plot_id = id;\n    if ((window.Bokeh !== undefined) && (id in Bokeh.index)) {\n      window.PyViz.plot_index[id] = Bokeh.index[id];\n    } else {\n      window.PyViz.plot_index[id] = null;\n    }\n  } else if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n    var bk_div = document.createElement(\"div\");\n    bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n    var script_attrs = bk_div.children[0].attributes;\n    for (var i = 0; i < script_attrs.length; i++) {\n      toinsert[toinsert.length - 1].childNodes[1].setAttribute(script_attrs[i].name, script_attrs[i].value);\n    }\n    // store reference to server id on output_area\n    output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n  }\n}\n\n/**\n * Handle when an output is cleared or removed\n */\nfunction handle_clear_output(event, handle) {\n  var id = handle.cell.output_area._hv_plot_id;\n  var server_id = handle.cell.output_area._bokeh_server_id;\n  if (((id === undefined) || !(id in PyViz.plot_index)) && (server_id !== undefined)) { return; }\n  var comm = window.PyViz.comm_manager.get_client_comm(\"hv-extension-comm\", \"hv-extension-comm\", function () {});\n  if (server_id !== null) {\n    comm.send({event_type: 'server_delete', 'id': server_id});\n    return;\n  } else if (comm !== null) {\n    comm.send({event_type: 'delete', 'id': id});\n  }\n  delete PyViz.plot_index[id];\n  if ((window.Bokeh !== undefined) & (id in window.Bokeh.index)) {\n    var doc = window.Bokeh.index[id].model.document\n    doc.clear();\n    const i = window.Bokeh.documents.indexOf(doc);\n    if (i > -1) {\n      window.Bokeh.documents.splice(i, 1);\n    }\n  }\n}\n\n/**\n * Handle kernel restart event\n */\nfunction handle_kernel_cleanup(event, handle) {\n  delete PyViz.comms[\"hv-extension-comm\"];\n  window.PyViz.plot_index = {}\n}\n\n/**\n * Handle update_display_data messages\n */\nfunction handle_update_output(event, handle) {\n  handle_clear_output(event, {cell: {output_area: handle.output_area}})\n  handle_add_output(event, handle)\n}\n\nfunction register_renderer(events, OutputArea) {\n  function append_mime(data, metadata, element) {\n    // create a DOM node to render to\n    var toinsert = this.create_output_subarea(\n    metadata,\n    CLASS_NAME,\n    EXEC_MIME_TYPE\n    );\n    this.keyboard_manager.register_events(toinsert);\n    // Render to node\n    var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n    render(props, toinsert[0]);\n    element.append(toinsert);\n    return toinsert\n  }\n\n  events.on('output_added.OutputArea', handle_add_output);\n  events.on('output_updated.OutputArea', handle_update_output);\n  events.on('clear_output.CodeCell', handle_clear_output);\n  events.on('delete.Cell', handle_clear_output);\n  events.on('kernel_ready.Kernel', handle_kernel_cleanup);\n\n  OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n    safe: true,\n    index: 0\n  });\n}\n\nif (window.Jupyter !== undefined) {\n  try {\n    var events = require('base/js/events');\n    var OutputArea = require('notebook/js/outputarea').OutputArea;\n    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n      register_renderer(events, OutputArea);\n    }\n  } catch(err) {\n  }\n}\n","content_type":"application/javascript"}}}],"key":"tHAtf6sw2t"}],"key":"pZJskZYbRl"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Useful projections\nepsg_3031 = ccrs.Stereographic(central_latitude=-90, true_scale_latitude=-71)\nlatlng = ccrs.PlateCarree()\nfeatures = gf.ocean.options(scale='50m').opts(projection=epsg_3031) * gf.coastline.options(scale='50m').opts(projection=epsg_3031)","key":"EpqMGz73pG"},{"type":"output","id":"fRUYQwGrMmBT4KO66WfpW","data":[],"key":"Lm8fUKIbNW"}],"key":"T98zXoxxV4"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Establish an OPR session\n# You'll probably want to set a cache directory if you're running this locally to speed\n# up subsequent requests. You can do other things like customize the STAC API endpoint,\n# but you shouldn't need to do that for most use cases.\nopr = xopr.opr_access.OPRConnection(cache_dir=\"radar_cache\")\n\n# Or you can open a connection without a cache directory (for example, if you're parallelizing\n# this on a cloud cluster without persistent storage).\n#opr = xopr.OPRConnection()","key":"dh9YKDZNHX"},{"type":"output","id":"6c6ckIu10sLdjehBmEowy","data":[],"key":"CFrueaQltE"}],"key":"a42RbfH8sX"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"xopr includes a helper module ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Mp8b5t94cq"},{"type":"inlineCode","value":"xopr.geometry","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tbGDHe6n7O"},{"type":"text","value":" with some useful utilities. You can call ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VAS1XtuiPd"},{"type":"inlineCode","value":"get_antarctic_regions","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WASvHQeBIF"},{"type":"text","value":" to select one or more regions from the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ts1fMZA26p"},{"type":"link","url":"https://nsidc.org/data/nsidc-0709/versions/2","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"MEaSUREs Antarctic Boundaries","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BTnHUuR2ys"}],"urlSource":"https://nsidc.org/data/nsidc-0709/versions/2","key":"fFXbhwHtbu"},{"type":"text","value":" dataset.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bk4PiD9o05"}],"key":"qt1N8DJrG4"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Before we dive in, let’s look at a few examples. Note that the GeoJSON returned is ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"cuU0VqD9Sz"},{"type":"inlineCode","value":"EPSG:4326","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"RacRGG3alP"},{"type":"text","value":" (","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"AMciACCq3f"},{"type":"inlineCode","value":"WGS84","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"iuayW9MUe9"},{"type":"text","value":"), so they look a bit weird. In the examples below, we reproject them to a more familiar ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"l0ZGUwIOsn"},{"type":"inlineCode","value":"EPSG:3031","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KDjkoS5yd8"},{"type":"text","value":" for the previews.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"g2M3u2sRZk"}],"key":"LZ67HY2SbI"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"You can select any (combination) of the three regions: ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"kKE2MrjIPM"},{"type":"inlineCode","value":"Peninsula","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"JdrXg0mCJV"},{"type":"text","value":", ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"cxd3gpMejD"},{"type":"inlineCode","value":"West","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"jtsb9k4BY0"},{"type":"text","value":", and ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"NXg08Hnk2F"},{"type":"inlineCode","value":"East","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Ta91ZybMQr"},{"type":"text","value":" like this:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"FeRVpIrPiX"}],"key":"vQFVdFVDa3"}],"key":"vd5Lr38eZE"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"tmp = xopr.geometry.get_antarctic_regions(regions='West', merge_regions=True)\nxopr.geometry.project_geojson(tmp)","key":"DxLDVHAzQY"},{"type":"output","id":"r-b3VWwh3wA6VFdOUDifQ","data":[{"output_type":"stream","name":"stdout","text":"Area is 2772102.2 km^2, automatically applying 1km simplification tolerance\nTo disable simplification, set simplify_tolerance=0\n"},{"output_type":"execute_result","execution_count":4,"metadata":{},"data":{"text/plain":{"content":"<MULTIPOLYGON (((-1922093.376 -181530.892, -1927846.817 -177904.171, -192644...>","content_type":"text/plain"},"image/svg+xml":{"content_type":"image/svg+xml","hash":"46aba79a9140d40657230bcfceb87ef0","path":"/xopr/build/46aba79a9140d40657230bcfceb87ef0.svg"}}}],"key":"SOFuAn9KCs"}],"key":"i8Hbe3ENl8"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The MEaSUREs dataset categorizes regions as ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GimMLkXXnE"},{"type":"inlineCode","value":"GR","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Uxqbne3vP1"},{"type":"text","value":" (grounded), ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hR0IdkFTcw"},{"type":"inlineCode","value":"FL","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CBCVK2xKnI"},{"type":"text","value":" (floating), or ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gWbdcOzy9h"},{"type":"inlineCode","value":"IS","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cjvSTzsgDx"},{"type":"text","value":" (island). You can select by those:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Rfzk9RwcIb"}],"key":"Ks7cjOEbO1"}],"key":"lYKFlVqCvY"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"tmp = xopr.geometry.get_antarctic_regions(type='FL', merge_regions=True)\nxopr.geometry.project_geojson(tmp)","key":"LRqHWJ5WKt"},{"type":"output","id":"rDqwM5mxWCytMw8B5aRxI","data":[{"output_type":"stream","name":"stdout","text":"Area is 1527034.4 km^2, automatically applying 1km simplification tolerance\nTo disable simplification, set simplify_tolerance=0\n"},{"output_type":"execute_result","execution_count":5,"metadata":{},"data":{"text/plain":{"content":"<MULTIPOLYGON (((2533281.303 -392088.617, 2535142.263 -390841.664, 2540678.4...>","content_type":"text/plain"},"image/svg+xml":{"content_type":"image/svg+xml","hash":"660e3c03e3ed89d887c243c454d319c7","path":"/xopr/build/660e3c03e3ed89d887c243c454d319c7.svg"}}}],"key":"G9ACUCT5nV"}],"key":"LC6JQE6GLM"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"You can also select by name. Note that you can pass a list to any of these parameters, as shown here.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kSd2APAGN3"}],"key":"IvsjFfjfA7"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"By default ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"YJN8Tymdqv"},{"type":"inlineCode","value":"merge_regions=True","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"kHc02d09q0"},{"type":"text","value":" and the return value is a single GeoJSON geometry. If you set ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"WLXhZVaXDt"},{"type":"inlineCode","value":"merge_regions=False","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ThyZdMK2Tb"},{"type":"text","value":", you’ll instead get back a GeoDataFrame with information about the regions included.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SmN6IkXh23"}],"key":"M2XrmoV1D3"},{"type":"admonition","kind":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Tip","key":"pOQRVY7mKF"}],"key":"BMl55q78wY"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"If you’re trying to figure out what parameters to use to find your region, the ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"y9HLul188N"},{"type":"link","url":"https://nsidc.org/sites/default/files/nsidc-0709-v002-userguide.pdf","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"user guide for the MEaSUREs data product","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"D5f54FxADe"}],"urlSource":"https://nsidc.org/sites/default/files/nsidc-0709-v002-userguide.pdf","key":"V39kB4ddPF"},{"type":"text","value":" may be useful.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"VlrzaieGdP"}],"key":"Qr297xtd11"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"link","url":"https://www.npolar.no/quantarctica/","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Quantarctica","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"OjG5t6NAfS"}],"urlSource":"https://www.npolar.no/quantarctica/","key":"g1J1UUFNm8"},{"type":"text","value":" also includes this layer under the “glaciology” category if you want to be able to browse around and see the regions.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"tMzxTmtt6g"}],"key":"b84krJAWDF"}],"key":"BWjVBQIWCW"}],"key":"lknik8cACw"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"xopr.geometry.get_antarctic_regions(name=['LarsenD', 'LarsenE'], merge_regions=False)","key":"JUbLIS3Bcc"},{"type":"output","id":"L-47FJ2Y9-C6Ey976wyKe","data":[{"output_type":"execute_result","execution_count":6,"metadata":{},"data":{"text/plain":{"content":"        NAME    Regions Subregions TYPE Asso_Shelf  \\\n0    LarsenE  Peninsula      Ipp-J   GR    LarsenE   \n157  LarsenD  Peninsula      Ipp-J   GR    LarsenD   \n196  LarsenD  Peninsula       None   FL       None   \n351  LarsenE  Peninsula       None   FL       None   \n\n                                              geometry  \n0    MULTIPOLYGON (((-60.39436 -73.13624, -60.38126...  \n157  MULTIPOLYGON (((-64.95333 -69.41766, -64.9344 ...  \n196  MULTIPOLYGON (((-61.05159 -68.70734, -61.02381...  \n351  MULTIPOLYGON (((-60.74551 -73.68418, -60.77062...  ","content_type":"text/plain"},"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>NAME</th>\n      <th>Regions</th>\n      <th>Subregions</th>\n      <th>TYPE</th>\n      <th>Asso_Shelf</th>\n      <th>geometry</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>LarsenE</td>\n      <td>Peninsula</td>\n      <td>Ipp-J</td>\n      <td>GR</td>\n      <td>LarsenE</td>\n      <td>MULTIPOLYGON (((-60.39436 -73.13624, -60.38126...</td>\n    </tr>\n    <tr>\n      <th>157</th>\n      <td>LarsenD</td>\n      <td>Peninsula</td>\n      <td>Ipp-J</td>\n      <td>GR</td>\n      <td>LarsenD</td>\n      <td>MULTIPOLYGON (((-64.95333 -69.41766, -64.9344 ...</td>\n    </tr>\n    <tr>\n      <th>196</th>\n      <td>LarsenD</td>\n      <td>Peninsula</td>\n      <td>None</td>\n      <td>FL</td>\n      <td>None</td>\n      <td>MULTIPOLYGON (((-61.05159 -68.70734, -61.02381...</td>\n    </tr>\n    <tr>\n      <th>351</th>\n      <td>LarsenE</td>\n      <td>Peninsula</td>\n      <td>None</td>\n      <td>FL</td>\n      <td>None</td>\n      <td>MULTIPOLYGON (((-60.74551 -73.68418, -60.77062...</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"}}}],"key":"wyncBG5Mpv"}],"key":"Gr8wRC81v1"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"For the rest of this notebook, we’re going to look at just the Dotson ice shelf, which we select as follows:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CM7dcGCTkv"}],"key":"PGmWHfz0Vt"}],"key":"HlTikIpLSi"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"region = xopr.geometry.get_antarctic_regions(name=\"Dotson\", type=\"FL\", merge_regions=True)\nxopr.geometry.project_geojson(region)","key":"EwoMRy8F9l"},{"type":"output","id":"_7JJAtP4S-C4GiY286HOV","data":[{"output_type":"execute_result","execution_count":7,"metadata":{},"data":{"text/plain":{"content":"<POLYGON ((-1535033.641 -603663.519, -1523891.979 -607745.869, -1518091.124 ...>","content_type":"text/plain"},"image/svg+xml":{"content":"<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"300\" height=\"300\" viewBox=\"-1604436.4535339698 -699379.8654460388 124521.88594473037 100328.26849800418\" preserveAspectRatio=\"xMinYMin meet\"><g transform=\"matrix(1,0,0,-1,0,-1298431.4623940734)\"><path fill-rule=\"evenodd\" fill=\"#66cc99\" stroke=\"#555555\" stroke-width=\"830.1459062982025\" opacity=\"0.6\" d=\"M -1535033.6410597798,-603663.5186496913 L -1523891.9787907358,-607745.8692888143 L -1518091.1237925675,-611378.0028265627 L -1515784.2367488926,-612767.1487492172 L -1511845.3543600067,-614722.5502998375 L -1505362.8375035743,-617626.9296381875 L -1501567.9415089465,-618846.1012730995 L -1495069.132600818,-621033.0512206275 L -1491316.2997685797,-622522.4617157271 L -1485656.4276192521,-625686.6267567899 L -1485670.0511782386,-626749.994546351 L -1485667.1075469798,-628241.2620546664 L -1485129.2595090452,-630771.5285442227 L -1484526.489290896,-633570.3228967737 L -1484836.793409464,-634956.9803795409 L -1485370.7203483859,-636066.6181247781 L -1485599.0760699066,-637565.2963328208 L -1486977.1898611663,-637948.3531333928 L -1488669.7765088668,-637627.0933058506 L -1490443.0791672992,-636361.2154008681 L -1493298.2547659203,-633558.2271806068 L -1495435.656252169,-632229.3140725387 L -1498013.8122619893,-628447.5175890275 L -1499984.5437622075,-626534.6873551768 L -1500982.1125494044,-626259.9396585053 L -1502313.7289003574,-626429.2090392301 L -1502921.1663384354,-627380.3289744415 L -1502972.8772969185,-628439.0225319208 L -1502290.284155125,-630317.3367786481 L -1501742.6874798667,-631849.0487027065 L -1502070.7368090306,-633444.8301730094 L -1503013.665629136,-634123.2519187246 L -1504617.267721399,-634113.3590210391 L -1508370.7011981471,-633649.3199748291 L -1509374.3451831504,-634399.8726468389 L -1510462.983990794,-634545.7743994883 L -1511152.2400490409,-635041.7736414907 L -1511850.7961521302,-635880.9079930437 L -1512582.4694376076,-637589.7985392734 L -1513538.731235019,-639349.3014612889 L -1514656.1283360808,-640355.6797067284 L -1514556.398241922,-640892.211751511 L -1513902.3196613006,-641044.9751347497 L -1513293.9770007853,-640890.7541518654 L -1513083.7905314383,-641337.1561908412 L -1513175.346910111,-642306.2540490188 L -1513844.456902564,-644022.4525420542 L -1513899.5686393236,-644564.4832057209 L -1513863.8601606197,-645422.4283859426 L -1514352.4720120186,-647118.2703385205 L -1515617.756950873,-647482.1095665392 L -1515326.2222298195,-647887.5692902117 L -1514317.3389025202,-648289.2394910319 L -1513695.6306494249,-648959.1728912098 L -1512912.3999058802,-649634.565880235 L -1512160.145830718,-650560.8580681982 L -1510553.688476201,-652120.4595304328 L -1507659.495695826,-654852.56054911 L -1506532.593735687,-656449.8997681842 L -1506461.5526447378,-657013.5925379155 L -1505843.9404702042,-657912.3050552127 L -1505621.5890957646,-658585.0512938473 L -1504980.7559105195,-659571.6667065625 L -1504191.2143153416,-660481.938342593 L -1503439.1652345862,-661183.5661044096 L -1502336.4608670434,-661688.908954291 L -1501435.5224227768,-662274.3970542391 L -1499701.4091313398,-662892.6039628529 L -1498824.785455853,-663284.9329408242 L -1497371.5242451178,-663540.4334404969 L -1494719.058678662,-663925.0677397485 L -1493761.61727819,-663527.5780997863 L -1491693.707353726,-663520.9071393866 L -1490372.8153506087,-663834.2155689287 L -1488912.439061828,-664745.0172464409 L -1488113.2914000605,-665278.5354505519 L -1487299.9759901047,-665648.3812103758 L -1486600.9885083677,-666181.7512619557 L -1485966.739957143,-667002.3330023494 L -1485797.3164204522,-667686.2022215988 L -1485819.085637555,-668526.102400383 L -1486029.7300331984,-669056.2216318722 L -1486395.6782483219,-669724.5073211795 L -1487003.4937558959,-670328.052271869 L -1487815.9953555039,-671194.3167803066 L -1488440.3394120592,-671853.1503788412 L -1489386.2740673798,-672705.1035872764 L -1490399.6377940034,-673112.3786900744 L -1491378.2252617301,-673841.3051004917 L -1491828.2312891039,-673842.0349176825 L -1492277.61922842,-674292.4181733518 L -1492583.5298434058,-675746.9101841587 L -1492592.3450013755,-677892.605921258 L -1493403.7368882073,-678775.7211366125 L -1494048.4919820095,-679139.3466126112 L -1494667.4518218078,-679730.7627348334 L -1495567.990960346,-679674.3489930546 L -1496075.4885920451,-679590.3810235375 L -1497097.9460523324,-679362.8354974795 L -1498356.6589832483,-679479.0931978099 L -1499961.096022069,-679387.6237349701 L -1501999.119732378,-678153.9031787678 L -1503131.565036102,-677041.0942703725 L -1503755.4748466997,-676486.7430061881 L -1504291.1102420792,-676206.1005082668 L -1505201.02213267,-675536.0462851251 L -1505783.2995321173,-674995.8377611951 L -1506261.3785494715,-674687.5156411064 L -1506569.030076254,-674431.549576584 L -1506962.6642838262,-674265.9880746142 L -1507384.0620252083,-673924.616447079 L -1508284.7576682195,-673024.2344799209 L -1509184.6625838024,-673024.3665355013 L -1509634.6187637176,-672573.9545792133 L -1511657.1901847445,-672205.063331673 L -1513672.1937421116,-672370.709354008 L -1516400.659591073,-672740.5625966458 L -1517613.8104269993,-672991.4634832878 L -1519294.13004349,-673247.4018885058 L -1520911.316070047,-674039.1395329369 L -1523424.8879759617,-673441.3338392813 L -1525121.3685989215,-673275.7600902595 L -1528163.3695443387,-673048.317411238 L -1528597.171162295,-673653.2950461536 L -1528501.1119911037,-674473.0376647278 L -1529031.072377937,-674918.0395942789 L -1529795.7697745676,-675735.3633569919 L -1530965.9732052437,-676575.8352804047 L -1530857.5967222704,-677367.2660049052 L -1530289.0996114502,-678288.7321135335 L -1529742.1620830405,-678849.8891396249 L -1529262.5813996496,-679546.5627038298 L -1528333.7302140112,-680190.5794599002 L -1528276.9848304575,-680583.6396441767 L -1527149.9137916137,-681515.0570950762 L -1526770.2245626086,-682303.1727995602 L -1525841.316749856,-683292.1411545306 L -1524814.5436255068,-684894.6968033732 L -1524805.4726322433,-686149.5357531025 L -1526309.4845827336,-686514.4456283064 L -1528055.1158201655,-685953.7335902508 L -1528558.4126360572,-685664.1047879845 L -1530060.496488433,-685151.5053864112 L -1531392.3243139344,-684530.3904406155 L -1532087.9095593195,-684217.8783221807 L -1532822.305555287,-683853.0718797793 L -1533665.3262452628,-683248.6025575518 L -1534238.1107758721,-682945.127545627 L -1534789.3562232563,-682457.3467675035 L -1535292.475082772,-681883.0300738006 L -1535661.1316028058,-681541.4321739887 L -1536632.8483573792,-680589.5223827302 L -1538591.1655429904,-679594.2321821044 L -1539511.3853147153,-678787.5946859488 L -1540444.9125583088,-677649.4188098281 L -1541691.5112358402,-676004.5957581731 L -1542700.2240953168,-675350.1931650548 L -1543514.229937775,-675497.3903028099 L -1544081.7693474644,-675210.2951183923 L -1545604.606233421,-675298.4405928059 L -1546033.4594154716,-675119.5673259794 L -1546498.152614227,-674917.4625787844 L -1547107.0074679994,-674745.4577580593 L -1547456.277543841,-674569.1757471198 L -1547906.1369346268,-674318.173819598 L -1548806.1455419285,-674119.2219839201 L -1549820.1797336915,-673896.6979974968 L -1551677.845978268,-673338.3990752653 L -1552669.4687691142,-673238.097460292 L -1553307.335135461,-672769.776738311 L -1553756.9689207196,-672319.3923016785 L -1555669.9973453458,-672091.3843432871 L -1556496.1729278849,-672312.8033349914 L -1557663.9123657334,-672639.2639767142 L -1558420.672182412,-672872.4935749387 L -1559073.257154565,-673142.6810433415 L -1559696.0720821104,-673198.7058087805 L -1560380.5795917301,-673101.0456437431 L -1561419.6473829944,-672952.3215586871 L -1562701.3755822517,-672779.441973063 L -1563878.2667778626,-672527.2190914341 L -1564600.1987464759,-672343.5045473002 L -1565373.0469110338,-672246.2405009964 L -1565984.93054677,-672470.237070992 L -1566254.9701486477,-672870.0414984149 L -1565624.5169026384,-673949.4566858803 L -1565058.1217147738,-674421.8636335104 L -1564090.7968568802,-675156.0978988648 L -1560818.9780613198,-678996.5631650098 L -1559544.6040321647,-679594.092127481 L -1557676.8954738851,-680359.601794648 L -1557027.9117912666,-680586.7581507014 L -1556286.1075732498,-681003.8517960688 L -1555763.4580079054,-681778.026551925 L -1555154.7996560282,-682981.056714644 L -1554579.7439561898,-683970.7359691599 L -1554522.9512986229,-684420.728973959 L -1554573.838085846,-685212.2784035499 L -1555446.389219655,-686096.1532559001 L -1556675.7116799916,-686225.885225786 L -1557829.1311696416,-686188.5474380201 L -1559224.5589051093,-686047.2223439049 L -1559989.2074381607,-686155.3221922654 L -1560244.3213487663,-686832.693748872 L -1561002.7061152542,-688102.4837483482 L -1561737.395095736,-688576.1108714609 L -1561941.08105659,-689378.9232173002 L -1562494.4358868613,-690501.5034268162 L -1563138.7589760309,-691093.8922116444 L -1565890.7230284822,-690939.853812872 L -1567535.2508059791,-690262.0089874181 L -1568269.3578605838,-690261.9274952576 L -1569169.8395502865,-689812.1333095721 L -1569619.7577481342,-689812.1550322692 L -1571208.2666969327,-689362.5397368267 L -1572174.5400446577,-689815.6979227735 L -1572879.9743655496,-690749.715040058 L -1573358.6010108294,-691024.3879532415 L -1573836.2937886359,-691189.9436147942 L -1573979.0896326741,-691868.0247625397 L -1574143.7151937867,-692716.1218488484 L -1574256.655359201,-693416.9919338684 L -1574706.6286797198,-693867.577854774 L -1575270.4536969776,-694767.1311585021 L -1577070.9481885904,-694767.9437443821 L -1577520.94493702,-694317.8955930442 L -1577970.970245296,-694318.0759426905 L -1578421.5370773363,-693868.1744083515 L -1579094.3033777566,-693413.6017385727 L -1579686.2472442975,-692877.8016631139 L -1580164.8881342527,-692479.9170954283 L -1580809.4587921253,-692092.0269617342 L -1581401.606151104,-691779.2095617228 L -1582778.473601409,-690626.8553622413 L -1583706.8288916494,-690086.2445695904 L -1585113.390121069,-689219.8904241452 L -1585450.0163778896,-688849.9540648819 L -1585957.4788263622,-688457.211318939 L -1587161.6987796498,-687968.2347706475 L -1588354.754532252,-687636.0562380456 L -1587990.8147217527,-687100.7425869083 L -1587763.1764082748,-686257.5595461717 L -1587919.9269203846,-684924.1393441404 L -1587739.7835751246,-683779.8575078388 L -1587650.4329895794,-683021.0881550622 L -1587614.0464752777,-679250.9123297211 L -1587039.350243272,-678022.83861002 L -1587203.00013356,-677550.4061927536 L -1587337.418535904,-676451.3329557991 L -1587663.6242349523,-675692.2936024698 L -1588189.698201602,-674329.7328910581 L -1589062.255798183,-672571.450242304 L -1589289.4530280496,-671779.5030926894 L -1589298.9558411324,-670658.3022172786 L -1588890.5785400022,-669605.2629391362 L -1589540.3506257301,-666680.0041068187 L -1590137.5032958402,-662880.6843487419 L -1590416.7458472524,-662431.1522611029 L -1591127.412898987,-662451.4818188588 L -1592159.6237768112,-661756.0277725757 L -1592637.8584243788,-660780.8567860754 L -1593139.9963390995,-660341.3385406954 L -1594466.5067730455,-655010.8628417116 L -1595229.5876432885,-651517.4408232954 L -1595656.2147704652,-650536.6494010582 L -1597039.561472903,-649277.6529674546 L -1598312.5963503234,-647469.6646020833 L -1599103.3116805435,-646039.8363391008 L -1599439.8758157552,-644138.7033107793 L -1599824.5318323132,-643174.631921831 L -1598412.8842744974,-643121.1839808663 L -1597421.9269601225,-642329.5466828346 L -1595753.3874086908,-641532.7334707505 L -1594734.218214508,-641196.0183123031 L -1594284.5759296233,-641196.4966002353 L -1593834.0862028399,-640746.5809921162 L -1593384.4886752455,-640746.9927392798 L -1592205.4001622777,-640136.1542259463 L -1591555.8511315323,-639737.8864964884 L -1590850.2145595334,-639316.2147011805 L -1589779.359839852,-638667.0465246764 L -1589244.1635822149,-638217.3382576413 L -1587883.4981947315,-637050.7683051836 L -1585928.329312583,-635323.1443034469 L -1584972.1908085684,-634219.1793148769 L -1583694.0715625607,-632287.2742721726 L -1583210.9940550777,-631501.02773831 L -1582902.5360910988,-630823.2292019688 L -1582390.006590826,-629420.8863462943 L -1581911.9630289914,-627577.4439266062 L -1582225.3846202155,-626225.2853950228 L -1581860.6633037818,-624243.936089389 L -1581366.6583019602,-621343.8728853775 L -1581658.50493984,-618972.4591610794 L -1581130.0037394664,-618262.1528932131 L -1580656.538837902,-618205.629023217 L -1579249.4963165773,-618814.0715398835 L -1578353.9005798749,-619445.4726142476 L -1577859.793756905,-620417.1412846814 L -1576900.97203045,-620247.9123142962 L -1576270.8966641475,-620065.7647076409 L -1575846.031550396,-620484.1224796409 L -1575803.5259307935,-620891.3167047242 L -1575928.123487466,-621470.171670812 L -1575653.7928571808,-622335.3459307068 L -1575316.450238331,-623007.5551710001 L -1575117.9348963595,-624807.8310679538 L -1575094.5292894666,-625712.8820812211 L -1574639.0324832913,-626643.8244833216 L -1574588.2862585355,-628061.4144336814 L -1574332.2901283666,-629212.2505590458 L -1573812.0901593636,-630249.0511372684 L -1572495.40823123,-630903.3992570678 L -1570656.4754895237,-630954.8738032463 L -1568179.9467123356,-630585.5453038965 L -1566612.2291562655,-630590.1596371002 L -1565706.706418999,-630225.9123904095 L -1564778.4038956577,-630112.5496393739 L -1563707.5334482004,-629894.766521209 L -1562266.7202074912,-628818.5314813737 L -1561618.4457965514,-628563.1559797815 L -1559432.2591368346,-627242.4003140741 L -1558908.846207647,-625273.2602058203 L -1557605.4106802903,-623369.5521817364 L -1556234.0155478753,-622297.1406674244 L -1555969.408431276,-621786.6697776483 L -1554824.3749215174,-620783.6587675144 L -1554140.9493662925,-619451.4840271131 L -1553889.749094479,-618518.7418691181 L -1553639.9547459541,-617618.0388951555 L -1553640.2050305533,-617167.546658778 L -1552848.5728141246,-616206.5433668719 L -1552678.0234821734,-615756.0041761774 L -1551435.7450066695,-615368.0633959163 L -1551104.0486652504,-614655.7136295887 L -1551807.424022894,-613543.161436816 L -1551605.6395902159,-612759.6736610344 L -1551255.6851056025,-611882.3334745654 L -1550471.5888621346,-611925.938668792 L -1549774.1301346773,-612420.233734879 L -1549362.4917691546,-612509.7046458715 L -1548911.7680419665,-612509.9130711019 L -1548462.0082365158,-612060.498083447 L -1546866.2826155364,-611292.103801284 L -1545876.3669814651,-611429.3129251909 L -1545490.738117762,-611310.8205639999 L -1544535.0669391009,-609955.4779059413 L -1544067.644820949,-609915.6331268944 L -1542837.7784792464,-609178.3343649289 L -1541959.1478046034,-608288.2200808603 L -1541501.354792646,-608132.2947501239 L -1540907.681818713,-608162.2520418669 L -1540378.7991057427,-608454.9610126291 L -1539324.7881014496,-609565.8422970187 L -1538698.1194803421,-609817.8508169658 L -1538100.4321579847,-609872.9533960791 L -1537498.9955348873,-609999.1242131524 L -1536790.2975558941,-608522.425663472 L -1535880.0058300232,-607702.5842723218 L -1535116.822505038,-607337.9659254232 L -1534718.8606133312,-606693.9341546191 L -1534525.1740951505,-606078.5089661271 L -1534809.8812001455,-605007.8761226011 L -1535070.4985140588,-604330.2056486079 L -1535033.6410597798,-603663.5186496913 z M -1514627.694148499,-658192.6714687856 L -1514405.0603445405,-657691.7454098812 L -1514739.0110504767,-657413.4531549353 L -1515351.254011358,-657636.0869588917 L -1515518.2293643265,-658192.671468785 L -1515072.961756413,-658582.2806257106 L -1514683.3525994888,-658693.5975276896 L -1514627.694148499,-658192.6714687856 z M -1516186.1307761993,-644333.7171724524 L -1516687.0568351003,-643276.2066036536 L -1517744.5674038995,-642942.2558977195 L -1518802.0779726966,-642886.5974467298 L -1519581.2962865452,-642942.2558977185 L -1519803.9300905021,-643443.1819566223 L -1519915.2469924814,-644667.6678783869 L -1520082.2223454479,-645558.2030942151 L -1519358.6624825874,-646003.4707021295 L -1518301.1519137926,-646504.3967610338 L -1516798.3737370793,-645947.8122511399 L -1516520.081482135,-645669.5199961949 L -1516575.7399331252,-644890.3016823446 L -1516186.1307761993,-644333.7171724524 z M -1534386.4442496991,-657691.7454098823 L -1536724.0991912484,-656856.8686450424 L -1538171.2189169722,-656801.210194054 L -1538393.8527209284,-657079.5024490001 L -1537837.268211032,-657636.0869588912 L -1537670.2928580656,-658303.9883707635 L -1537113.7083481713,-658749.2559786779 L -1535555.2717204718,-659083.2066846137 L -1534275.1273477173,-658971.8897826347 L -1533885.518190794,-658526.6221747213 L -1533996.835092774,-657970.0376648287 L -1534386.4442496991,-657691.7454098823 z M -1517521.9335999414,-635650.9988181217 L -1518301.1519137912,-635706.6572691101 L -1519636.9547375357,-636764.1678379084 L -1520805.7822083076,-638433.9213675851 L -1521807.6343261173,-640660.2594071578 L -1521974.609679086,-641606.4530739759 L -1521585.0005221593,-641996.0622309004 L -1521251.0498162217,-642218.696034857 L -1520694.4653063316,-641773.4284269438 L -1520249.1976984171,-640715.9178581472 L -1519303.004031598,-639714.0657403396 L -1518078.5181098331,-638211.2875636283 L -1517521.9335999414,-636875.4847398855 L -1517521.9335999414,-635650.9988181217 z M -1529766.7928175856,-628192.7663855554 L -1529989.4266215416,-629639.886111277 L -1529822.4512685733,-630196.4706211694 L -1529265.866758684,-631253.9811899675 L -1529043.2329547259,-631754.9072488707 L -1529098.891405715,-632311.4917587633 L -1529377.1836606604,-633202.0269745927 L -1529098.8914057163,-633925.5868374535 L -1528264.0146408745,-635205.7312102069 L -1527818.7470329585,-635484.0234651522 L -1527763.088581972,-635150.0727592173 L -1528041.3808369196,-632756.7593666788 L -1527930.0639349392,-631420.9565429348 L -1527596.1132290056,-631087.0058369996 L -1527317.82097406,-630697.3966800751 L -1527206.5040720778,-630140.8121701815 L -1527540.454778014,-629862.5199152342 L -1528597.965346812,-629361.5938563318 L -1528764.9406997757,-628749.3508954474 L -1528764.9406997783,-628137.1079345666 L -1529377.1836606616,-627803.157228631 L -1529711.134366599,-627858.8156796208 L -1529766.7928175856,-628192.7663855554 z M -1536668.440740256,-623684.431855422 L -1537058.049897184,-623517.4565024552 L -1537225.0252501538,-623851.4072083918 L -1537392.0006031196,-624296.6748163054 L -1537892.926662023,-625298.5269341123 L -1537837.2682110313,-625799.4529930154 L -1537113.7083481709,-625020.2346791652 L -1536668.440740256,-623684.431855422 z M -1539840.9724466472,-619009.1219723218 L -1539395.7048387316,-618953.463521332 L -1539618.3386426894,-618619.5128153965 L -1540230.581603573,-618229.903658472 L -1540787.1661134686,-617895.9529525372 L -1541399.409074351,-618007.269854516 L -1541566.3844273172,-618341.2205604508 L -1541399.4090743468,-618619.5128153965 L -1540954.1414664339,-618842.1466193541 L -1540564.532309507,-618953.463521332 L -1539840.9724466472,-619009.1219723218 z M -1532387.5062502432,-614905.8139881841 L -1532716.7458090922,-614181.4869587178 L -1533013.0614120539,-614181.486958717 L -1533473.996794442,-614346.1067381412 L -1533869.0842650626,-614543.6504734516 L -1533902.008220944,-614872.8900322991 L -1533836.160309174,-615235.053547032 L -1533737.3884415221,-615498.4451941117 L -1533309.3770150174,-615695.9889294207 L -1532815.5176767448,-615663.064973535 L -1532453.3541620118,-615498.4451941107 L -1532387.5062502432,-614905.8139881841 z M -1517827.5417961231,-613954.0142737738 L -1518346.5798639555,-614829.8910132424 L -1518541.2191393944,-615478.6885980351 L -1518541.2191393934,-615900.4070281493 L -1517989.7411923204,-616516.7647337028 L -1517632.9025206855,-617003.3629222962 L -1516627.2662642573,-617749.4801448067 L -1516043.348437944,-618852.4360389528 L -1515913.5889209863,-619922.9520538598 L -1515718.9496455477,-620669.0692763701 L -1515297.2312154323,-621155.6674649644 L -1514486.2342344443,-621544.9460158407 L -1513577.9176157368,-621772.0251705182 L -1512572.2813593075,-621642.265653559 L -1511728.8444990772,-621415.1864988812 L -1511436.8855859223,-621188.1073442043 L -1511080.046914285,-620604.1895178916 L -1511015.1671558078,-619793.1925369021 L -1511144.9266727648,-618949.7556766717 L -1511728.8444990786,-617749.4801448071 L -1513632.639247704,-616137.6443093384 L -1515978.4686794635,-615219.1695641172 L -1516237.9877133823,-614894.7707717218 L -1516302.867471862,-614343.292824649 L -1516497.5067472982,-613694.4952398572 L -1516529.946626538,-613337.656568221 L -1516692.146022736,-612915.938138106 L -1517211.1840905703,-612429.3399495125 L -1517665.3423999236,-612299.580432554 L -1517989.7411923215,-612461.7798287523 L -1517989.741192321,-613013.2577758256 L -1517892.4215546013,-613434.9762059397 L -1517827.5417961231,-613889.1345152946 L -1517827.5417961231,-613954.0142737738 z\" /></g></svg>","content_type":"image/svg+xml"}}}],"key":"ziEkUz9Qjs"}],"key":"Cih8ZpX5CG"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Here we see a new way of searching for radar frames by geometry. Simply passing our GeoJSON region gives us every available frame that intersects it.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZI1C82CIhP"}],"key":"Jk358OAJ81"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"inlineCode","value":"data_product","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"AUTlbJNMnm"},{"type":"text","value":" controls what you get back. If you set this to ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"mBbCFn2rxq"},{"type":"inlineCode","value":"CSARP_standard","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"mM9iOnX8xd"},{"type":"text","value":" (or another ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VPYwPe6QDJ"},{"type":"inlineCode","value":"CSARP_","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"RCTTQ1V3BU"},{"type":"text","value":" standard data product), you’ll get back a list of loaded radar frames. If you set it to ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"PP39L7BRqz"},{"type":"inlineCode","value":"None","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ldeqW8xXDi"},{"type":"text","value":", you’ll get back the actual STAC items. That’s helpful here because we’re going to distribute the process of analyzing these frames, so we don’t actually want to load any data just yet.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yKIC1Ac0uN"}],"key":"NyRYGHHp4D"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Passing ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ZWSHYVSK8H"},{"type":"inlineCode","value":"max_items=10","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"YWVR9QX5yj"},{"type":"text","value":" limits the search to a maximum of 10 items to keep this running quickly on the GitHub Actions runners, but feel free to experiment with removing it.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"lfIqi0A0Pm"}],"key":"SP7gsdpKL9"}],"key":"KFadY9gG1F"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"#stac_items = opr.search_by_geometry(region, data_product=None, max_items=10)\nstac_items = opr.query_frames(geometry=region, max_items=10)","key":"ki6gWahkLG"},{"type":"output","id":"S86Mchxy3lLFYifl2ILFl","data":[],"key":"KsftwJ2rBq"}],"key":"JjOnIxWUso"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plotting a map should look familiar. Here we’ve also overlaid the region we’re searching.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ztqRzZxcTF"}],"key":"zPVExM3F6Q"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"You’ll notice that the region doesn’t quite line up with the GeoViews ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"uirDbWHug9"},{"type":"inlineCode","value":"coastline","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"C9cfaytV0P"},{"type":"text","value":" feature. That’s expected. The coastline feature is a relatively low resolution global data product that you shouldn’t treat as a real grounding line.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"LDfoPIqRe9"}],"key":"hITgJTM0Zl"}],"key":"ZzBI5BVXV9"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Plot a map of our loaded data over the selected region on an EPSG:3031 projection\n\n# Create a GeoViews object for the selected region\nregion_gv = gv.Polygons(region, crs=latlng).opts(\n    color='green',\n    line_color='black',\n    fill_alpha=0.5,\n    projection=epsg_3031,\n)\n# Plot the frame geometries\nframe_lines = []\nfor item in stac_items:\n    path_data = [tuple(coord) for coord in item['geometry']['coordinates']]\n    frame_lines.append(gv.Path([path_data], crs=latlng).opts(\n        line_width=2,\n        projection=epsg_3031\n    ))\n\n(features * region_gv * gv.Overlay(frame_lines)).opts(projection=epsg_3031)","key":"HXu8AwfZmo"},{"type":"output","id":"egDb7LKaWtEss3RXBZ8E_","data":[{"output_type":"stream","name":"stderr","text":"/home/runner/work/xopr/xopr/.venv/lib/python3.13/site-packages/cartopy/io/__init__.py:242: DownloadWarning: Downloading: https://naturalearth.s3.amazonaws.com/110m_physical/ne_110m_coastline.zip\n  warnings.warn(f'Downloading: {url}', DownloadWarning)\n"},{"output_type":"stream","name":"stderr","text":"/home/runner/work/xopr/xopr/.venv/lib/python3.13/site-packages/cartopy/io/__init__.py:242: DownloadWarning: Downloading: https://naturalearth.s3.amazonaws.com/110m_physical/ne_110m_ocean.zip\n  warnings.warn(f'Downloading: {url}', DownloadWarning)\n"},{"output_type":"stream","name":"stderr","text":"/home/runner/work/xopr/xopr/.venv/lib/python3.13/site-packages/cartopy/io/__init__.py:242: DownloadWarning: Downloading: https://naturalearth.s3.amazonaws.com/50m_physical/ne_50m_ocean.zip\n  warnings.warn(f'Downloading: {url}', DownloadWarning)\n"},{"output_type":"stream","name":"stderr","text":"/home/runner/work/xopr/xopr/.venv/lib/python3.13/site-packages/cartopy/io/__init__.py:242: DownloadWarning: Downloading: https://naturalearth.s3.amazonaws.com/50m_physical/ne_50m_coastline.zip\n  warnings.warn(f'Downloading: {url}', DownloadWarning)\n"},{"output_type":"display_data","metadata":{},"data":{}},{"output_type":"execute_result","execution_count":9,"metadata":{"application/vnd.holoviews_exec.v0+json":{"id":"eed0f4bb-c49b-4398-b014-76d87dd4a2cf"}},"data":{"text/html":{"content_type":"text/html","hash":"76516ece4d92063c883d886dcbbddb42","path":"/xopr/build/76516ece4d92063c883d886dcbbddb42.html"},"application/vnd.holoviews_exec.v0+json":{"content":"","content_type":"application/vnd.holoviews_exec.v0+json"},"text/plain":{"content":":Overlay\n   .Ocean.I     :Feature   [Longitude,Latitude]\n   .Coastline.I :Feature   [Longitude,Latitude]\n   .Polygons.I  :Polygons   [Longitude,Latitude]\n   .Path.I      :Path   [Longitude,Latitude]\n   .Path.II     :Path   [Longitude,Latitude]\n   .Path.III    :Path   [Longitude,Latitude]\n   .Path.IV     :Path   [Longitude,Latitude]\n   .Path.V      :Path   [Longitude,Latitude]\n   .Path.VI     :Path   [Longitude,Latitude]\n   .Path.VII    :Path   [Longitude,Latitude]\n   .Path.VIII   :Path   [Longitude,Latitude]\n   .Path.IX     :Path   [Longitude,Latitude]\n   .Path.X      :Path   [Longitude,Latitude]","content_type":"text/plain"}}}],"key":"dxGWAjyXhh"}],"key":"XrJOVnOdQZ"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now that we’ve picked out some data, we’re going to define some functions to do some simple analysis on it. We won’t explain every detail of the code below, but basically it’s picking out the surface and bed reflection powers and giving us back a ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Vp4QCK9gA7"},{"type":"inlineCode","value":"Dataset","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XyNPR9JBGN"},{"type":"text","value":" with those powers in decibels.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NNtwOB82vb"}],"key":"keXD3wctyz"}],"key":"ljwdAAbxzH"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def extract_layer_peak_power(radar_ds, layer_twtt, margin_twtt):\n    \"\"\"\n    Extract the peak power of a radar layer within a specified margin around the layer's two-way travel time (TWTT).\n\n    Parameters:\n    - radar_ds: xarray Dataset containing radar data.\n    - layer_twtt: The two-way travel time of the layer to extract.\n    - margin_twtt: The margin around the layer's TWTT to consider for peak power extraction.\n\n    Returns:\n    - A DataArray containing the peak power values for the specified layer.\n    \"\"\"\n    \n    # Ensure that layer_twtt.slow_time matches the radar_ds slow_time\n    t_start = np.minimum(radar_ds.slow_time.min(), layer_twtt.slow_time.min())\n    t_end = np.maximum(radar_ds.slow_time.max(), layer_twtt.slow_time.max())\n    layer_twtt = layer_twtt.sel(slow_time=slice(t_start, t_end))\n    radar_ds = radar_ds.sel(slow_time=slice(t_start, t_end))\n    #layer_twtt = layer_twtt.interp(slow_time=radar_ds.slow_time, method='nearest')\n    layer_twtt = layer_twtt.reindex(slow_time=radar_ds.slow_time, method='nearest', tolerance=pd.Timedelta(seconds=1), fill_value=np.nan)\n    \n    # Calculate the start and end TWTT for the margin\n    start_twtt = layer_twtt - margin_twtt\n    end_twtt = layer_twtt + margin_twtt\n    \n    # Extract the data within the specified TWTT range\n    data_within_margin = radar_ds.where((radar_ds.twtt >= start_twtt) & (radar_ds.twtt <= end_twtt), drop=True)\n\n    power_dB = 10 * np.log10(np.abs(data_within_margin.Data))\n\n    # Find the twtt index corresponding to the peak power\n    peak_twtt_index = power_dB.argmax(dim='twtt')\n    # Convert the index to the actual TWTT value\n    peak_twtt = power_dB.twtt[peak_twtt_index]\n\n    # Calculate the peak power in dB\n    peak_power = power_dB.isel(twtt=peak_twtt_index)\n\n    # Remove unnecessary dimensions\n    peak_twtt = peak_twtt.drop_vars('twtt')\n    peak_power = peak_power.drop_vars('twtt')\n    \n    return peak_twtt, peak_power\n\ndef surface_bed_reflection_power(stac_item, opr=xopr.opr_access.OPRConnection()):\n\n    frame = opr.load_frame(stac_item, data_product='CSARP_standard')\n    frame = frame.resample(slow_time='5s').mean()\n\n    try:\n        layers = opr.get_layers_db(frame)\n    except Exception as e:\n        print(f\"Error retrieving layers: {e}\")\n        return None\n    \n    # Re-pick surface and bed layers to ensure we're getting the peaks\n    speed_of_light_in_ice = scipy.constants.c / np.sqrt(3.17)  # Speed of light in ice (m/s)\n    layer_selection_margin_twtt = 50 / speed_of_light_in_ice # approx 50 m margin in ice\n    surface_repicked_twtt, surface_power = extract_layer_peak_power(frame, layers[1]['twtt'], layer_selection_margin_twtt)\n    bed_repicked_twtt, bed_power = extract_layer_peak_power(frame, layers[2]['twtt'], layer_selection_margin_twtt)\n\n    # Create a dataset from surface_repicked_twtt, bed_repicked_twtt, surface_power, and bed_power\n\n    reflectivity_dataset = xr.merge([\n        surface_repicked_twtt.rename('surface_twtt'),\n        bed_repicked_twtt.rename('bed_twtt'),\n        surface_power.rename('surface_power_dB'),\n        bed_power.rename('bed_power_dB'),\n        ])\n\n    flight_line_metadata = frame.drop_vars(['Data', 'Surface', 'Bottom'])\n    reflectivity_dataset = xr.merge([reflectivity_dataset, flight_line_metadata])\n\n    reflectivity_dataset = reflectivity_dataset.drop_dims(['twtt'])  # Remove the twtt dimension since everything has been flattened\n\n    attributes_to_copy = ['season', 'segment', 'doi', 'ror', 'funder_text']\n    reflectivity_dataset.attrs = {attr: frame.attrs[attr] for attr in attributes_to_copy if attr in frame.attrs}\n\n    return reflectivity_dataset","key":"OHbDd13cMs"},{"type":"output","id":"CJpmIk71oUoL5KapPnXp4","data":[],"key":"FOUzXVXmHr"}],"key":"aQOrScQVPF"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s try out our analysis function on one frame. The plot below shows surface and bed power for a single frame of radar data.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"l6mLFsCsKB"}],"key":"KAGdEuwhX9"}],"key":"VR5A0LtDwn"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"reflectivity = surface_bed_reflection_power(stac_items[0], opr=opr)\n\nfig, ax = plt.subplots(figsize=(8, 4))\nreflectivity['surface_power_dB'].plot(ax=ax, x='slow_time', label='Surface')\nreflectivity['bed_power_dB'].plot(ax=ax, x='slow_time', label='Bed')\nax.set_ylabel('Power [dB]')\nax.legend()\nplt.show()","key":"H8NSHbfzwc"},{"type":"output","id":"0IklBCKNidwkkFJ-5KV_E","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 800x400 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"a01bfe2eac3b56a63e5d2064d744a3e3","path":"/xopr/build/a01bfe2eac3b56a63e5d2064d744a3e3.png"}}}],"key":"HgAJni9cIO"}],"key":"biw0hwXjql"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Ok, that works, so now let’s scale up. You could just write a loop, but this is a parallelizable task, so we want to share the load out across whatever computational resources you might have.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gNOJGxomsZ"}],"key":"UV58rkuzY9"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This is good time to pause and note a few things:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"itE9Jd8gfJ"}],"key":"VvGAUUQKQf"},{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"This is getting too complicated!","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ws7ixXEu4I"}],"key":"ksaRr6CaaU"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"We’re about to jump into how to parallelize your workflows. This part is ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"wPXbbkxUQP"},{"type":"emphasis","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"completely optional","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"qvAa74CWot"}],"key":"GTldsjXd5X"},{"type":"text","value":". If you’re happily doing your analysis without thinking about this, you can feel free to ignore the rest of the tutorial.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"FV10uOq1ez"}],"key":"d8qT9JCLYC"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"But if you’re curious or you’d like to run things faster...","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"tGpTfdmLCP"}],"key":"agj6ltYQQ2"}],"key":"Ja88MgKcT8"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"If you’re still with us, this would probably be a good time to briefly read up on ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"WhpshxD4cN"},{"type":"link","url":"https://www.dask.org/","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Dask","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"fdnqzR8iBL"}],"urlSource":"https://www.dask.org/","key":"PMwj12rlk0"},{"type":"text","value":". In short, Dask gives us a way to write code that looks pretty close to standard Python code but also easily distribute jobs across available compute infrastructure.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"uiMMkZHQ5w"}],"key":"TWLBnNvGWp"},{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"The defaults in this notebook will simply parallelize this workflow across however many CPU cores you have on your machine. We’ll also discuss using ","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"gvKcpSY5Mx"},{"type":"link","url":"https://coiled.io/","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Coiled","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"l0GO8oY9lc"}],"urlSource":"https://coiled.io/","key":"qNEfX6dwOP"},{"type":"text","value":" to scale your workflows into the cloud.","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"ucKtEWpt9c"}],"key":"vsnOvVJPWq"},{"type":"paragraph","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"There are many more options, which you can read about in ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"pkBrWCazL3"},{"type":"link","url":"https://docs.dask.org/en/stable/deploying.html","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"the Dask documentation","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"wHgeAuExek"}],"urlSource":"https://docs.dask.org/en/stable/deploying.html","key":"gC8ZXavoXB"},{"type":"text","value":". These options allow you to distribute your workflow across various cloud services or using any HPC resources you may have acesss to.","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"Wicr9x8q05"}],"key":"zgcSBp8RfI"},{"type":"paragraph","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"Getting started, we’ll create a Dask ","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"QjOD6o2yZC"},{"type":"inlineCode","value":"LocalCluster","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"betqQPnqvd"},{"type":"text","value":", which is just going to let us distribute the workload across the CPUs on our machine:","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"MOHZUAUI27"}],"key":"o5SP9bAgfU"}],"key":"XmuZD8dS7S"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import dask\nfrom dask.distributed import LocalCluster\n\nclient = LocalCluster().get_client()","key":"Br27tqfxdR"},{"type":"output","id":"K-QczYdUiQEAdNHJQ3LaT","data":[],"key":"vl40VgAOCs"}],"key":"PwQmHS9ZO0"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We could have alternatively created any cluster we want. For example, this is how you’d create a Coiled cluster:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Xi5CayRnTO"}],"key":"j7FwJBwIsh"}],"key":"vLN2Ka0wuy"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# import dask\n# import coiled\n# cluster = coiled.Cluster(n_workers=10)\n# client = cluster.get_client()","key":"vd3RUK4djK"},{"type":"output","id":"42rR9zss3cZddNGUSAA74","data":[],"key":"Iz25kvnZwr"}],"key":"iI2Qv5Fezz"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now we’re going to use ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cKrAXjVBrR"},{"type":"inlineCode","value":"client.map","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zxitiujztn"},{"type":"text","value":" to run our function across whatever resources are in the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Wb2rfTfcB7"},{"type":"inlineCode","value":"client","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sOUMvJ6e3O"},{"type":"text","value":" object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"m9DcIOK5sb"}],"key":"bRQ8iqJYpu"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Note that if you’re using a cloud cluster, you probably don’t want to pass your local ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"GLFIr1ppXq"},{"type":"inlineCode","value":"opr","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"P9QKB95QJx"},{"type":"text","value":" object. Since you don’t have shared storage anyway, it’ll be better to let it load a default ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"XTQ3wzpWYh"},{"type":"inlineCode","value":"OPRConnection()","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"eoXWMbmPpE"},{"type":"text","value":" object on each worker.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"IVw80mgfKx"}],"key":"ShSKTaa5cK"}],"key":"Pq9H7Pcb0v"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"futures = client.map(surface_bed_reflection_power, stac_items, opr=opr)\n\n# Process results as they complete, capturing exceptions\nresults = []\nfor future in dask.distributed.as_completed(futures):\n    try:\n        result = future.result()\n        results.append(result)\n    except Exception as e:\n        print(traceback.format_exc())","key":"AWQUr2CLRz"},{"type":"output","id":"d58Sapf_pfxFaTTnayt0Y","data":[{"output_type":"stream","name":"stderr","text":"/tmp/ipykernel_2332/3902380015.py:64: FutureWarning: In a future version of xarray the default value for join will change from join='outer' to join='exact'. This change will result in the following ValueError: cannot be aligned with join='exact' because index/labels/sizes are not equal along these coordinates (dimensions): 'slow_time' ('slow_time',) The recommendation is to set join explicitly for this case.\n"}],"key":"RlP5aVaqRX"}],"key":"BQFIdQdpra"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Great! If that ran successfully, results should now be a list of ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dZzwhT8eoX"},{"type":"inlineCode","value":"Dataset","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"saklTqdfCy"},{"type":"text","value":"’s. Now we’re back to normal code to visualize our results.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AVjOAXy475"}],"key":"qHXXqEyupt"}],"key":"dOoiMadt7j"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Create a GeoViews object for the selected region\nregion_gv = gv.Polygons(region, crs=latlng).opts(\n    line_color='black',\n    fill_alpha=0,\n    projection=epsg_3031,\n)\n\ndata_lines = []\nfor ds in results:\n    ds['bed_minus_surf'] = ds['bed_power_dB'] - ds['surface_power_dB']\n    ds = ds.dropna(dim='slow_time')\n    ds = xopr.geometry.project_dataset(ds, target_crs='EPSG:3031')\n    sc = ds.hvplot.scatter(x='x', y='y', c='bed_minus_surf',\n                           hover_cols=['surface_power_dB', 'bed_power_dB'],\n                           cmap='turbo', size=3)\n    data_lines.append(sc)\n\n(features * region_gv * gv.Overlay(data_lines)).opts(aspect='equal')","key":"Y1hhfA5tuT"},{"type":"output","id":"k5MuM-UgtV_j25HeLWys2","data":[{"output_type":"display_data","metadata":{},"data":{}},{"output_type":"execute_result","execution_count":15,"metadata":{"application/vnd.holoviews_exec.v0+json":{"id":"d9b56637-3c6c-433d-aafd-36459c45f1ce"}},"data":{"text/html":{"content_type":"text/html","hash":"a7a14be5c23e1c998dec87358e092050","path":"/xopr/build/a7a14be5c23e1c998dec87358e092050.html"},"application/vnd.holoviews_exec.v0+json":{"content":"","content_type":"application/vnd.holoviews_exec.v0+json"},"text/plain":{"content":":Overlay\n   .Ocean.I      :Feature   [Longitude,Latitude]\n   .Coastline.I  :Feature   [Longitude,Latitude]\n   .Polygons.I   :Polygons   [Longitude,Latitude]\n   .Scatter.I    :Scatter   [x]   (y,bed_minus_surf,surface_power_dB,bed_power_dB)\n   .Scatter.II   :Scatter   [x]   (y,bed_minus_surf,surface_power_dB,bed_power_dB)\n   .Scatter.III  :Scatter   [x]   (y,bed_minus_surf,surface_power_dB,bed_power_dB)\n   .Scatter.IV   :Scatter   [x]   (y,bed_minus_surf,surface_power_dB,bed_power_dB)\n   .Scatter.V    :Scatter   [x]   (y,bed_minus_surf,surface_power_dB,bed_power_dB)\n   .Scatter.VI   :Scatter   [x]   (y,bed_minus_surf,surface_power_dB,bed_power_dB)\n   .Scatter.VII  :Scatter   [x]   (y,bed_minus_surf,surface_power_dB,bed_power_dB)\n   .Scatter.VIII :Scatter   [x]   (y,bed_minus_surf,surface_power_dB,bed_power_dB)\n   .Scatter.IX   :Scatter   [x]   (y,bed_minus_surf,surface_power_dB,bed_power_dB)\n   .Scatter.X    :Scatter   [x]   (y,bed_minus_surf,surface_power_dB,bed_power_dB)","content_type":"text/plain"}}}],"key":"xmodvgoOx5"}],"key":"wcJO9oMRN9"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"If you’re using a cloud or HPC cluster, it’s good practice to explicitly close it. In most cases, it’ll have an auto-timeout, but we’ll just close ours to be safe.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LplGSLVvtf"}],"key":"XeMVb7EmvF"}],"key":"ych4TT2OP1"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"#cluster.close()","key":"Ahk6lhpKj2"},{"type":"output","id":"X3_gK7MC9uG-e_L9PwI_w","data":[],"key":"VE9lYkCvll"}],"key":"VxSIpZmIDH"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Congrats! If you made it this far, you’ve learned how to parallelize your radar analysis workflows!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"T0eniX3FOV"}],"key":"wfXXFcRM4R"}],"key":"McrHzc7xfG"}],"key":"WYq1bich25"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"xopr Demo Notebook","url":"/demo-notebook","group":"Notebooks"},"next":{"title":"Reading parameters","url":"/reading-params","group":"Notebooks"}}},"domain":"http://localhost:3000"}